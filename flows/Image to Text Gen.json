{"id":"85e36e54-3502-4f55-9bd6-336ed6b5ed91","data":{"nodes":[{"width":384,"height":469,"id":"PromptTemplate-sFlNX","type":"genericNode","position":{"x":274.6769675458627,"y":1211.0362981809114},"data":{"type":"PromptTemplate","node":{"template":{"output_parser":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"output_parser","advanced":false,"dynamic":false,"info":"","type":"BaseOutputParser","list":false},"input_variables":{"required":true,"placeholder":"","show":false,"multiline":false,"password":false,"name":"input_variables","advanced":false,"dynamic":false,"info":"","type":"str","list":true,"value":["query","question"]},"partial_variables":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"partial_variables","advanced":false,"dynamic":false,"info":"","type":"dict","list":false},"template":{"required":true,"placeholder":"","show":true,"multiline":true,"password":false,"name":"template","advanced":false,"dynamic":false,"info":"","type":"prompt","list":false,"value":"find the {query}to the {question}"},"template_format":{"required":false,"placeholder":"","show":false,"multiline":false,"value":"f-string","password":false,"name":"template_format","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"validate_template":{"required":false,"placeholder":"","show":false,"multiline":false,"value":true,"password":false,"name":"validate_template","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"_type":"PromptTemplate","query":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":true,"value":"","fileTypes":[],"file_path":"","password":false,"name":"query","display_name":"query","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":""},"question":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":true,"value":"","fileTypes":[],"file_path":"","password":false,"name":"question","display_name":"question","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":""}},"description":"A prompt template for a language model.","base_classes":["StringPromptTemplate","PromptTemplate","BasePromptTemplate"],"name":"","display_name":"PromptTemplate","documentation":"https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/","custom_fields":{"":["query","question"],"template":["history","text"]},"output_types":[],"full_path":null,"field_formatters":{},"beta":false,"error":null},"id":"PromptTemplate-sFlNX"},"selected":false,"positionAbsolute":{"x":274.6769675458627,"y":1211.0362981809114},"dragging":false},{"width":384,"height":339,"id":"LLMChain-MPIXx","type":"genericNode","position":{"x":1074.897376789325,"y":629.0656043141801},"data":{"type":"LLMChain","node":{"template":{"callbacks":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"callbacks","advanced":false,"dynamic":false,"info":"","type":"langchain.callbacks.base.BaseCallbackHandler","list":true},"llm":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"llm","advanced":false,"dynamic":false,"info":"","type":"BaseLanguageModel","list":false},"memory":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"memory","advanced":false,"dynamic":false,"info":"","type":"BaseMemory","list":false},"output_parser":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"output_parser","advanced":false,"dynamic":false,"info":"","type":"BaseLLMOutputParser","list":false},"prompt":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"prompt","advanced":false,"dynamic":false,"info":"","type":"BasePromptTemplate","list":false},"llm_kwargs":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"llm_kwargs","advanced":false,"dynamic":false,"info":"","type":"dict","list":false},"metadata":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"metadata","advanced":false,"dynamic":false,"info":"","type":"dict","list":false},"output_key":{"required":true,"placeholder":"","show":true,"multiline":false,"value":"text","password":false,"name":"output_key","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"return_final_only":{"required":false,"placeholder":"","show":false,"multiline":false,"value":true,"password":false,"name":"return_final_only","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"tags":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"tags","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"verbose":{"required":false,"placeholder":"","show":false,"multiline":false,"value":false,"password":false,"name":"verbose","advanced":true,"dynamic":false,"info":"","type":"bool","list":false},"_type":"LLMChain"},"description":"Chain to run queries against LLMs.","base_classes":["Chain","LLMChain","function"],"display_name":"LLMChain","custom_fields":{},"output_types":[],"documentation":"https://python.langchain.com/docs/modules/chains/foundational/llm_chain","beta":false,"error":null},"id":"LLMChain-MPIXx"},"selected":false,"positionAbsolute":{"x":1074.897376789325,"y":629.0656043141801},"dragging":false},{"width":384,"height":577,"id":"ConversationBufferMemory-w4hfq","type":"genericNode","position":{"x":269.0394925992972,"y":631.9756428014542},"data":{"type":"ConversationBufferMemory","node":{"template":{"chat_memory":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"chat_memory","advanced":false,"dynamic":false,"info":"","type":"BaseChatMessageHistory","list":false},"ai_prefix":{"required":false,"placeholder":"","show":false,"multiline":false,"value":"AI","password":false,"name":"ai_prefix","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"human_prefix":{"required":false,"placeholder":"","show":false,"multiline":false,"value":"Human","password":false,"name":"human_prefix","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"input_key":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"question","password":false,"name":"input_key","advanced":false,"dynamic":false,"info":"The variable to be used as Chat Input when more than one variable is available.","type":"str","list":false},"memory_key":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"chat_history","password":false,"name":"memory_key","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"output_key":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"answer","password":false,"name":"output_key","advanced":false,"dynamic":false,"info":"The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)","type":"str","list":false},"return_messages":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"return_messages","advanced":false,"dynamic":false,"info":"","type":"bool","list":false,"value":true},"_type":"ConversationBufferMemory"},"description":"Buffer for storing conversation memory.","base_classes":["BaseMemory","ConversationBufferMemory","BaseChatMemory"],"display_name":"ConversationBufferMemory","custom_fields":{},"output_types":[],"documentation":"https://python.langchain.com/docs/modules/memory/how_to/buffer","beta":false,"error":null},"id":"ConversationBufferMemory-w4hfq"},"selected":false,"dragging":false,"positionAbsolute":{"x":269.0394925992972,"y":631.9756428014542}},{"width":384,"height":629,"id":"ChatOpenAI-kvcBy","type":"genericNode","position":{"x":280.45766752746636,"y":4.373450911621319},"data":{"type":"ChatOpenAI","node":{"template":{"callbacks":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"callbacks","advanced":false,"dynamic":false,"info":"","type":"langchain.callbacks.base.BaseCallbackHandler","list":true},"cache":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"cache","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"client":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"client","advanced":false,"dynamic":false,"info":"","type":"Any","list":false},"max_retries":{"required":false,"placeholder":"","show":false,"multiline":false,"value":6,"password":false,"name":"max_retries","advanced":false,"dynamic":false,"info":"","type":"int","list":false},"max_tokens":{"required":false,"placeholder":"","show":true,"multiline":false,"password":true,"name":"max_tokens","advanced":false,"dynamic":false,"info":"","type":"int","list":false,"value":""},"metadata":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"metadata","advanced":false,"dynamic":false,"info":"","type":"dict","list":false},"model_kwargs":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"model_kwargs","advanced":true,"dynamic":false,"info":"","type":"dict","list":false},"model_name":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"gpt-3.5-turbo","password":false,"options":["gpt-4-1106-preview","gpt-4","gpt-4-32k","gpt-3.5-turbo","gpt-3.5-turbo-16k"],"name":"model_name","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"n":{"required":false,"placeholder":"","show":false,"multiline":false,"value":1,"password":false,"name":"n","advanced":false,"dynamic":false,"info":"","type":"int","list":false},"openai_api_base":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"openai_api_base","display_name":"OpenAI API Base","advanced":false,"dynamic":false,"info":"\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n","type":"str","list":false,"value":"https://api.openai.com/v1"},"openai_api_key":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"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","password":true,"name":"openai_api_key","display_name":"OpenAI API Key","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"openai_organization":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"openai_organization","display_name":"OpenAI Organization","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"openai_proxy":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"openai_proxy","display_name":"OpenAI Proxy","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"request_timeout":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"request_timeout","advanced":false,"dynamic":false,"info":"","type":"float","list":false},"streaming":{"required":false,"placeholder":"","show":false,"multiline":false,"value":false,"password":false,"name":"streaming","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"tags":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"tags","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"temperature":{"required":false,"placeholder":"","show":true,"multiline":false,"value":0.7,"password":false,"name":"temperature","advanced":false,"dynamic":false,"info":"","type":"float","list":false},"tiktoken_model_name":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"tiktoken_model_name","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"verbose":{"required":false,"placeholder":"","show":false,"multiline":false,"value":false,"password":false,"name":"verbose","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"_type":"ChatOpenAI"},"description":"`OpenAI` Chat large language models API.","base_classes":["BaseLanguageModel","BaseChatModel","ChatOpenAI","BaseLLM"],"display_name":"ChatOpenAI","custom_fields":{},"output_types":[],"documentation":"https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai","beta":false,"error":null},"id":"ChatOpenAI-kvcBy"},"selected":false,"positionAbsolute":{"x":280.45766752746636,"y":4.373450911621319},"dragging":false},{"width":384,"height":453,"id":"CustomComponent-xgLzM","type":"genericNode","position":{"x":-253.30792314783235,"y":687.7163082630178},"data":{"type":"CustomComponent","node":{"template":{"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow import CustomComponent\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.schema import Document\r\nfrom typing import List\r\nfrom langchain.document_loaders import ImageCaptionLoader\r\nfrom PIL import Image\r\nfrom langchain.indexes import VectorstoreIndexCreator\r\nfrom transformers import BlipProcessor, BlipForConditionalGeneration\r\nimport requests\r\nimport os\r\n\r\n\r\nprocessor = BlipProcessor.from_pretrained(\"Salesforce/blip-image-captioning-large\")\r\nmodel = BlipForConditionalGeneration.from_pretrained(\"Salesforce/blip-image-captioning-large\")\r\n\r\nclass YourComponent(CustomComponent):\r\n    display_name: str = \"ImageCaptionLoader\"\r\n    description: str = \"Create image captions with BLIP\"\r\n\r\n    def build(self, query: str, list_image_urls: List[str]) -> Document:\r\n        os.environ[\"OPENAI_API_KEY\"] = \"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\"  # Replace with your actual OpenAI API key\r\n\r\n        # Initialize OpenAIEmbeddings with the environment variable\r\n        embeddings = OpenAIEmbeddings()\r\n\r\n        loader = ImageCaptionLoader(list_image_urls)\r\n        list_docs = loader.load()\r\n\r\n        Image.open(requests.get(list_image_urls[0], stream=True).raw).convert(\"RGB\")\r\n\r\n        index = VectorstoreIndexCreator().from_loaders([loader])\r\n        return index.query(query) \r\n\r\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":""},"list_image_urls":{"type":"str","required":true,"placeholder":"","list":true,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"list_image_urls","display_name":"list_image_urls","advanced":false,"dynamic":false,"info":"","value":["https://storage.googleapis.com/sfr-vision-language-research/BLIP/demo.jpg"]},"query":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"query","display_name":"query","advanced":false,"dynamic":false,"info":"","value":"what is the picture about?"},"_type":"CustomComponent"},"description":"Create image captions with BLIP","base_classes":["Document"],"display_name":"ImageCaptionLoader","documentation":"","custom_fields":{"list_image_urls":null,"query":null},"output_types":["Document"],"field_formatters":{},"beta":true},"id":"CustomComponent-xgLzM"},"selected":false,"positionAbsolute":{"x":-253.30792314783235,"y":687.7163082630178},"dragging":false}],"edges":[{"source":"ChatOpenAI-kvcBy","sourceHandle":"{œbaseClassesœ:[œBaseLanguageModelœ,œBaseChatModelœ,œChatOpenAIœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-kvcByœ}","target":"LLMChain-MPIXx","targetHandle":"{œfieldNameœ:œllmœ,œidœ:œLLMChain-MPIXxœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}","data":{"targetHandle":{"fieldName":"llm","id":"LLMChain-MPIXx","inputTypes":null,"type":"BaseLanguageModel"},"sourceHandle":{"baseClasses":["BaseLanguageModel","BaseChatModel","ChatOpenAI","BaseLLM"],"dataType":"ChatOpenAI","id":"ChatOpenAI-kvcBy"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-ChatOpenAI-kvcBy{œbaseClassesœ:[œBaseLanguageModelœ,œBaseChatModelœ,œChatOpenAIœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-kvcByœ}-LLMChain-MPIXx{œfieldNameœ:œllmœ,œidœ:œLLMChain-MPIXxœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"},{"source":"ConversationBufferMemory-w4hfq","sourceHandle":"{œbaseClassesœ:[œBaseMemoryœ,œConversationBufferMemoryœ,œBaseChatMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-w4hfqœ}","target":"LLMChain-MPIXx","targetHandle":"{œfieldNameœ:œmemoryœ,œidœ:œLLMChain-MPIXxœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}","data":{"targetHandle":{"fieldName":"memory","id":"LLMChain-MPIXx","inputTypes":null,"type":"BaseMemory"},"sourceHandle":{"baseClasses":["BaseMemory","ConversationBufferMemory","BaseChatMemory"],"dataType":"ConversationBufferMemory","id":"ConversationBufferMemory-w4hfq"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-ConversationBufferMemory-w4hfq{œbaseClassesœ:[œBaseMemoryœ,œConversationBufferMemoryœ,œBaseChatMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-w4hfqœ}-LLMChain-MPIXx{œfieldNameœ:œmemoryœ,œidœ:œLLMChain-MPIXxœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}"},{"source":"PromptTemplate-sFlNX","sourceHandle":"{œbaseClassesœ:[œStringPromptTemplateœ,œPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-sFlNXœ}","target":"LLMChain-MPIXx","targetHandle":"{œfieldNameœ:œpromptœ,œidœ:œLLMChain-MPIXxœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}","data":{"targetHandle":{"fieldName":"prompt","id":"LLMChain-MPIXx","inputTypes":null,"type":"BasePromptTemplate"},"sourceHandle":{"baseClasses":["StringPromptTemplate","PromptTemplate","BasePromptTemplate"],"dataType":"PromptTemplate","id":"PromptTemplate-sFlNX"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-PromptTemplate-sFlNX{œbaseClassesœ:[œStringPromptTemplateœ,œPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-sFlNXœ}-LLMChain-MPIXx{œfieldNameœ:œpromptœ,œidœ:œLLMChain-MPIXxœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"},{"source":"CustomComponent-xgLzM","sourceHandle":"{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-xgLzMœ}","target":"PromptTemplate-sFlNX","targetHandle":"{œfieldNameœ:œqueryœ,œidœ:œPromptTemplate-sFlNXœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}","data":{"targetHandle":{"fieldName":"query","id":"PromptTemplate-sFlNX","inputTypes":["Document","BaseOutputParser"],"type":"str"},"sourceHandle":{"baseClasses":["Document"],"dataType":"CustomComponent","id":"CustomComponent-xgLzM"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-CustomComponent-xgLzM{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-xgLzMœ}-PromptTemplate-sFlNX{œfieldNameœ:œqueryœ,œidœ:œPromptTemplate-sFlNXœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"}],"viewport":{"x":379.860085700618,"y":20.60312881042256,"zoom":0.5743491774985184}},"description":"Text Generation Meets Business Transformation.","name":"Image to Text Gen","last_tested_version":"0.6.3","is_component":false}