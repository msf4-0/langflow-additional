{"name":"Custom node101","description":"Building Intelligent Interactions.","data":{"nodes":[{"width":384,"height":267,"id":"VectorStoreAgent-VYVDt","type":"genericNode","position":{"x":2072.7412444709144,"y":87.9473985013492},"data":{"type":"VectorStoreAgent","node":{"template":{"llm":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"llm","display_name":"LLM","advanced":false,"dynamic":false,"info":"","type":"BaseLanguageModel","list":false},"vectorstoreinfo":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"vectorstoreinfo","display_name":"Vector Store Info","advanced":false,"dynamic":false,"info":"","type":"VectorStoreInfo","list":false},"_type":"vectorstore_agent"},"description":"Construct an agent from a Vector Store.","base_classes":["AgentExecutor"],"display_name":"VectorStoreAgent","documentation":""},"id":"VectorStoreAgent-VYVDt","value":null},"selected":false,"positionAbsolute":{"x":2072.7412444709144,"y":87.9473985013492}},{"width":384,"height":399,"id":"VectorStoreInfo-2D4sx","type":"genericNode","position":{"x":1512.5104164781078,"y":46.36455837624544},"data":{"type":"VectorStoreInfo","node":{"template":{"vectorstore":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"vectorstore","advanced":false,"dynamic":false,"info":"","type":"VectorStore","list":false},"description":{"required":true,"placeholder":"","show":true,"multiline":true,"password":false,"name":"description","advanced":false,"dynamic":false,"info":"","type":"str","list":false,"value":"Instructions to upload examples to Langflow Community Examples"},"name":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"name","advanced":false,"dynamic":false,"info":"","type":"str","list":false,"value":"UploadExamples"},"_type":"VectorStoreInfo"},"description":"Information about a VectorStore.","base_classes":["VectorStoreInfo"],"display_name":"VectorStoreInfo","documentation":""},"id":"VectorStoreInfo-2D4sx","value":null},"selected":false,"positionAbsolute":{"x":1512.5104164781078,"y":46.36455837624544},"dragging":false},{"width":384,"height":359,"id":"OpenAIEmbeddings-C0ObR","type":"genericNode","position":{"x":634.4928046631858,"y":631.1118899295246},"data":{"type":"OpenAIEmbeddings","node":{"template":{"allowed_special":{"required":false,"placeholder":"","show":true,"multiline":false,"value":[],"password":false,"name":"allowed_special","advanced":true,"dynamic":false,"info":"","type":"Literal'all'","list":true},"disallowed_special":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"all","password":false,"name":"disallowed_special","advanced":true,"dynamic":false,"info":"","type":"Literal'all'","list":true},"chunk_size":{"required":false,"placeholder":"","show":true,"multiline":false,"value":1000,"password":false,"name":"chunk_size","advanced":true,"dynamic":false,"info":"","type":"int","list":false},"client":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"client","advanced":true,"dynamic":false,"info":"","type":"Any","list":false},"deployment":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"text-embedding-ada-002","password":false,"name":"deployment","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"embedding_ctx_length":{"required":false,"placeholder":"","show":true,"multiline":false,"value":8191,"password":false,"name":"embedding_ctx_length","advanced":true,"dynamic":false,"info":"","type":"int","list":false},"headers":{"required":false,"placeholder":"","show":false,"multiline":true,"value":"{'Authorization':\n            'Bearer <token>'}","password":false,"name":"headers","advanced":true,"dynamic":false,"info":"","type":"Any","list":false},"max_retries":{"required":false,"placeholder":"","show":true,"multiline":false,"value":6,"password":false,"name":"max_retries","advanced":true,"dynamic":false,"info":"","type":"int","list":false},"model":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"text-embedding-ada-002","password":false,"name":"model","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"model_kwargs":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"model_kwargs","advanced":true,"dynamic":false,"info":"","type":"code","list":false},"openai_api_base":{"required":false,"placeholder":"","show":true,"multiline":false,"password":true,"name":"openai_api_base","display_name":"OpenAI API Base","advanced":true,"dynamic":false,"info":"","type":"str","list":false,"value":""},"openai_api_key":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"","password":true,"name":"openai_api_key","display_name":"OpenAI API Key","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"openai_api_type":{"required":false,"placeholder":"","show":true,"multiline":false,"password":true,"name":"openai_api_type","display_name":"OpenAI API Type","advanced":true,"dynamic":false,"info":"","type":"str","list":false,"value":""},"openai_api_version":{"required":false,"placeholder":"","show":true,"multiline":false,"password":true,"name":"openai_api_version","display_name":"OpenAI API Version","advanced":true,"dynamic":false,"info":"","type":"str","list":false,"value":""},"openai_organization":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"openai_organization","display_name":"OpenAI Organization","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"openai_proxy":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"openai_proxy","display_name":"OpenAI Proxy","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"request_timeout":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"request_timeout","advanced":true,"dynamic":false,"info":"","type":"float","list":false},"show_progress_bar":{"required":false,"placeholder":"","show":true,"multiline":false,"value":false,"password":false,"name":"show_progress_bar","advanced":true,"dynamic":false,"info":"","type":"bool","list":false},"tiktoken_model_name":{"required":false,"placeholder":"","show":true,"multiline":false,"password":true,"name":"tiktoken_model_name","advanced":false,"dynamic":false,"info":"","type":"str","list":false,"value":""},"_type":"OpenAIEmbeddings"},"description":"OpenAI embedding models.","base_classes":["Embeddings","OpenAIEmbeddings"],"display_name":"OpenAIEmbeddings","documentation":"https://python.langchain.com/docs/modules/data_connection/text_embedding/integrations/openai"},"id":"OpenAIEmbeddings-C0ObR","value":null},"selected":false,"positionAbsolute":{"x":634.4928046631858,"y":631.1118899295246}},{"width":384,"height":515,"id":"Chroma-2dU4y","type":"genericNode","position":{"x":1095.3487511497542,"y":76.42415717969288},"data":{"type":"Chroma","node":{"template":{"client":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"client","advanced":false,"dynamic":false,"info":"","type":"chromadb.Client","list":false},"client_settings":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"client_settings","advanced":false,"dynamic":false,"info":"","type":"chromadb.config.Setting","list":true},"documents":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"documents","display_name":"Documents","advanced":false,"dynamic":false,"info":"","type":"Document","list":true},"embedding":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"embedding","display_name":"Embedding","advanced":false,"dynamic":false,"info":"","type":"Embeddings","list":false},"chroma_server_cors_allow_origins":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"chroma_server_cors_allow_origins","display_name":"Chroma Server CORS Allow Origins","advanced":true,"dynamic":false,"info":"","type":"str","list":true},"chroma_server_grpc_port":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"chroma_server_grpc_port","display_name":"Chroma Server GRPC Port","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"chroma_server_host":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"chroma_server_host","display_name":"Chroma Server Host","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"chroma_server_http_port":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"chroma_server_http_port","display_name":"Chroma Server HTTP Port","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"chroma_server_ssl_enabled":{"required":false,"placeholder":"","show":true,"multiline":false,"value":false,"password":false,"name":"chroma_server_ssl_enabled","display_name":"Chroma Server SSL Enabled","advanced":true,"dynamic":false,"info":"","type":"bool","list":false},"collection_metadata":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"collection_metadata","advanced":false,"dynamic":false,"info":"","type":"code","list":false},"collection_name":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"langflow","password":false,"name":"collection_name","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"ids":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"ids","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"metadatas":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"metadatas","advanced":false,"dynamic":false,"info":"","type":"code","list":true},"persist":{"required":false,"placeholder":"","show":true,"multiline":false,"value":true,"password":false,"name":"persist","display_name":"Persist","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"persist_directory":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"persist_directory","advanced":false,"dynamic":false,"info":"","type":"str","list":false,"value":"custom"},"search_kwargs":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"{}","password":false,"name":"search_kwargs","advanced":true,"dynamic":false,"info":"","type":"code","list":false},"_type":"Chroma"},"description":"Create a Chroma vectorstore from a raw documents.","base_classes":["VectorStore","Chroma","BaseRetriever","VectorStoreRetriever"],"display_name":"Chroma","custom_fields":{},"output_types":[],"documentation":"https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/chroma"},"id":"Chroma-2dU4y","value":null},"selected":false,"dragging":false,"positionAbsolute":{"x":1095.3487511497542,"y":76.42415717969288}},{"width":384,"height":379,"id":"WebBaseLoader-EfdbB","type":"genericNode","position":{"x":16,"y":16},"data":{"type":"WebBaseLoader","node":{"template":{"metadata":{"required":true,"placeholder":"","show":true,"multiline":false,"value":"{}","password":false,"name":"metadata","display_name":"Metadata","advanced":false,"dynamic":false,"info":"","type":"code","list":false},"web_path":{"required":true,"placeholder":"","show":true,"multiline":false,"value":"https://en.wikipedia.org/wiki/Machine_learning","password":false,"name":"web_path","display_name":"Web Page","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"_type":"WebBaseLoader"},"description":"Loader that uses urllib and beautiful soup to load webpages.","base_classes":["Document"],"display_name":"WebBaseLoader","custom_fields":{},"output_types":["Document"],"documentation":"https://python.langchain.com/docs/modules/data_connection/document_loaders/integrations/web_base"},"id":"WebBaseLoader-EfdbB","value":null},"selected":false,"positionAbsolute":{"x":16,"y":16},"dragging":false},{"width":384,"height":621,"id":"ChatOpenAI-tLSgZ","type":"genericNode","position":{"x":1515.0034201737178,"y":467.8667476138098},"data":{"type":"ChatOpenAI","node":{"template":{"callbacks":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"callbacks","advanced":false,"dynamic":false,"info":"","type":"langchain.callbacks.base.BaseCallbackHandler","list":true},"cache":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"cache","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"client":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"client","advanced":false,"dynamic":false,"info":"","type":"Any","list":false},"max_retries":{"required":false,"placeholder":"","show":false,"multiline":false,"value":6,"password":false,"name":"max_retries","advanced":false,"dynamic":false,"info":"","type":"int","list":false},"max_tokens":{"required":false,"placeholder":"","show":true,"multiline":false,"password":true,"name":"max_tokens","advanced":false,"dynamic":false,"info":"","type":"int","list":false,"value":""},"metadata":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"metadata","advanced":false,"dynamic":false,"info":"","type":"code","list":false},"model_kwargs":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"model_kwargs","advanced":true,"dynamic":false,"info":"","type":"code","list":false},"model_name":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"gpt-3.5-turbo","password":false,"options":["gpt-3.5-turbo-0613","gpt-3.5-turbo","gpt-3.5-turbo-16k-0613","gpt-3.5-turbo-16k","gpt-4-0613","gpt-4-32k-0613","gpt-4","gpt-4-32k"],"name":"model_name","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"n":{"required":false,"placeholder":"","show":false,"multiline":false,"value":1,"password":false,"name":"n","advanced":false,"dynamic":false,"info":"","type":"int","list":false},"openai_api_base":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"openai_api_base","display_name":"OpenAI API Base","advanced":false,"dynamic":false,"info":"\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n","type":"str","list":false},"openai_api_key":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"","password":true,"name":"openai_api_key","display_name":"OpenAI API Key","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"openai_organization":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"openai_organization","display_name":"OpenAI Organization","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"openai_proxy":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"openai_proxy","display_name":"OpenAI Proxy","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"request_timeout":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"request_timeout","advanced":false,"dynamic":false,"info":"","type":"float","list":false},"streaming":{"required":false,"placeholder":"","show":false,"multiline":false,"value":false,"password":false,"name":"streaming","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"tags":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"tags","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"temperature":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"0.2","password":false,"name":"temperature","advanced":false,"dynamic":false,"info":"","type":"float","list":false},"tiktoken_model_name":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"tiktoken_model_name","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"verbose":{"required":false,"placeholder":"","show":false,"multiline":false,"value":false,"password":false,"name":"verbose","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"_type":"ChatOpenAI"},"description":"Wrapper around OpenAI Chat large language models.","base_classes":["BaseLanguageModel","BaseChatModel","ChatOpenAI","BaseLLM"],"display_name":"ChatOpenAI","custom_fields":{},"output_types":[],"documentation":"https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai"},"id":"ChatOpenAI-tLSgZ","value":null},"selected":false,"positionAbsolute":{"x":1515.0034201737178,"y":467.8667476138098},"dragging":false},{"width":384,"height":307,"id":"LLMChain-x0Bo8","type":"genericNode","position":{"x":3499.5301263626625,"y":166.5341697300173},"data":{"type":"LLMChain","node":{"template":{"callbacks":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"callbacks","advanced":false,"dynamic":false,"info":"","type":"langchain.callbacks.base.BaseCallbackHandler","list":true},"llm":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"llm","advanced":false,"dynamic":false,"info":"","type":"BaseLanguageModel","list":false},"memory":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"memory","advanced":false,"dynamic":false,"info":"","type":"BaseMemory","list":false},"output_parser":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"output_parser","advanced":false,"dynamic":false,"info":"","type":"BaseLLMOutputParser","list":false},"prompt":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"prompt","advanced":false,"dynamic":false,"info":"","type":"BasePromptTemplate","list":false},"llm_kwargs":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"llm_kwargs","advanced":false,"dynamic":false,"info":"","type":"code","list":false},"metadata":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"metadata","advanced":false,"dynamic":false,"info":"","type":"code","list":false},"output_key":{"required":true,"placeholder":"","show":true,"multiline":false,"value":"text","password":false,"name":"output_key","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"return_final_only":{"required":false,"placeholder":"","show":false,"multiline":false,"value":true,"password":false,"name":"return_final_only","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"tags":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"tags","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"verbose":{"required":false,"placeholder":"","show":false,"multiline":false,"value":false,"password":false,"name":"verbose","advanced":true,"dynamic":false,"info":"","type":"bool","list":false},"_type":"LLMChain"},"description":"Chain to run queries against LLMs.","base_classes":["LLMChain","Chain","function"],"display_name":"LLMChain","custom_fields":{},"output_types":[],"documentation":"https://python.langchain.com/docs/modules/chains/foundational/llm_chain","beta":false,"error":null},"id":"LLMChain-x0Bo8","value":null},"selected":false,"positionAbsolute":{"x":3499.5301263626625,"y":166.5341697300173}},{"width":384,"height":445,"id":"PromptTemplate-WbiuD","type":"genericNode","position":{"x":2997.2685584444116,"y":578.824430099413},"data":{"type":"PromptTemplate","node":{"template":{"output_parser":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"output_parser","advanced":false,"dynamic":false,"info":"","type":"BaseOutputParser","list":false},"input_variables":{"required":true,"placeholder":"","show":false,"multiline":false,"password":false,"name":"input_variables","advanced":false,"dynamic":false,"info":"","type":"str","list":true,"value":["steps","input"]},"partial_variables":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"partial_variables","advanced":false,"dynamic":false,"info":"","type":"code","list":false},"template":{"required":true,"placeholder":"","show":true,"multiline":true,"password":false,"name":"template","advanced":false,"dynamic":false,"info":"","type":"prompt","list":false,"value":"Steps to upload examples:\n{steps}\n\nHuman: {input}\nAI:"},"template_format":{"required":false,"placeholder":"","show":false,"multiline":false,"value":"f-string","password":false,"name":"template_format","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"validate_template":{"required":false,"placeholder":"","show":false,"multiline":false,"value":true,"password":false,"name":"validate_template","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"_type":"PromptTemplate","steps":{"required":false,"placeholder":"","show":true,"multiline":true,"value":"","password":false,"name":"steps","display_name":"steps","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":"","type":"str","list":false},"input":{"required":false,"placeholder":"","show":true,"multiline":true,"value":"","password":false,"name":"input","display_name":"input","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":"","type":"str","list":false}},"description":"A prompt template for a language model.","base_classes":["PromptTemplate","BasePromptTemplate","StringPromptTemplate"],"name":"","display_name":"PromptTemplate","documentation":"https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/","custom_fields":{"":["steps","input"],"template":["steps","input"]},"output_types":[],"field_formatters":{"formatters":{"openai_api_key":{}},"base_formatters":{"kwargs":{},"optional":{},"list":{},"dict":{},"union":{},"multiline":{},"show":{},"password":{},"default":{},"headers":{},"dict_code_file":{},"model_fields":{"MODEL_DICT":{"OpenAI":["text-davinci-003","text-davinci-002","text-curie-001","text-babbage-001","text-ada-001"],"ChatOpenAI":["gpt-3.5-turbo-0613","gpt-3.5-turbo","gpt-3.5-turbo-16k-0613","gpt-3.5-turbo-16k","gpt-4-0613","gpt-4-32k-0613","gpt-4","gpt-4-32k"],"Anthropic":["claude-v1","claude-v1-100k","claude-instant-v1","claude-instant-v1-100k","claude-v1.3","claude-v1.3-100k","claude-v1.2","claude-v1.0","claude-instant-v1.1","claude-instant-v1.1-100k","claude-instant-v1.0"],"ChatAnthropic":["claude-v1","claude-v1-100k","claude-instant-v1","claude-instant-v1-100k","claude-v1.3","claude-v1.3-100k","claude-v1.2","claude-v1.0","claude-instant-v1.1","claude-instant-v1.1-100k","claude-instant-v1.0"]}}}},"beta":false,"error":null},"id":"PromptTemplate-WbiuD","value":null},"selected":false,"positionAbsolute":{"x":2997.2685584444116,"y":578.824430099413},"dragging":false},{"width":384,"height":439,"id":"CustomComponent-0CQD6","type":"genericNode","position":{"x":2517.1505294992744,"y":80.95954662011127},"data":{"type":"CustomComponent","node":{"template":{"code":{"dynamic":true,"required":true,"placeholder":"","show":true,"multiline":true,"value":"from langflow import CustomComponent\n\nfrom langchain.llms.base import BaseLLM\nfrom langchain import PromptTemplate\nfrom langchain.schema import Document\nfrom langchain.agents.agent import AgentExecutor\nfrom langchain.chains.base import Chain\nfrom typing import Union, Optional\n\nclass PromptRunner(CustomComponent):\n    display_name: str = \"Runner\"\n    description: str = \"Run a Chain with the given PromptTemplate\"\n    beta = True\n    field_config = {\n        \"llm\": {\"display_name\": \"LLM\"},\n        \"input_message\": {\"multiline\": True},\n        \n    }\n\n    def build(\n        self,\n        input_message: str,\n        chain: Optional[Chain] = None,\n        agent: Optional[AgentExecutor] = None,\n\n    ) -> Document:\n        chain_to_run = chain or agent\n        if chain_to_run is None:\n            raise ValueError(\"You must pass a Chain or an Agent to the Runner\")\n        # The input is an empty dict because the prompt is already filled\n        result = chain_to_run.run({\"input\": input_message})\n        if hasattr(result, \"content\"):\n            result = result.content\n        self.repr_value = result\n        return Document(page_content=str(result))\n","password":false,"name":"code","advanced":false,"type":"code","list":false},"_type":"CustomComponent","agent":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"agent","display_name":"agent","advanced":false,"dynamic":false,"info":"","type":"AgentExecutor","list":false},"chain":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"chain","display_name":"chain","advanced":false,"dynamic":false,"info":"","type":"Chain","list":false},"input_message":{"required":true,"placeholder":"","show":true,"multiline":true,"password":false,"name":"input_message","display_name":"input_message","advanced":false,"dynamic":false,"info":"","type":"str","list":false,"value":"How do I upload examples?"}},"description":"Run a Chain with the given PromptTemplate","base_classes":["Document"],"display_name":"Runner","custom_fields":{"agent":null,"chain":null,"input_message":null},"output_types":[],"documentation":"","beta":true,"error":null},"id":"CustomComponent-0CQD6","value":null},"selected":false,"positionAbsolute":{"x":2517.1505294992744,"y":80.95954662011127},"dragging":false},{"width":384,"height":485,"id":"RecursiveCharacterTextSplitter-NgDKg","type":"genericNode","position":{"x":534,"y":-53.28125},"data":{"type":"RecursiveCharacterTextSplitter","node":{"template":{"code":{"dynamic":true,"required":true,"placeholder":"","show":false,"multiline":true,"value":"from typing import Optional\nfrom langflow import CustomComponent\nfrom langchain.schema import Document\n\n\nclass RecursiveCharacterTextSplitterComponent(CustomComponent):\n    display_name: str = \"Recursive Character Text Splitter\"\n    description: str = \"Split text into chunks of a specified length.\"\n    documentation: str = \"https://docs.langflow.org/components/text-splitters#recursivecharactertextsplitter\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\n                \"display_name\": \"Documents\",\n                \"info\": \"The documents to split.\",\n            },\n            \"separators\": {\n                \"display_name\": \"Separators\",\n                \"info\": 'The characters to split on.\\nIf left empty defaults to [\"\\\\n\\\\n\", \"\\\\n\", \" \", \"\"].',\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\n                \"display_name\": \"Chunk Size\",\n                \"info\": \"The maximum length of each chunk.\",\n                \"field_type\": \"int\",\n                \"value\": 1000,\n            },\n            \"chunk_overlap\": {\n                \"display_name\": \"Chunk Overlap\",\n                \"info\": \"The amount of overlap between chunks.\",\n                \"field_type\": \"int\",\n                \"value\": 200,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        documents: list[Document],\n        separators: Optional[list[str]] = None,\n        chunk_size: Optional[int] = 1000,\n        chunk_overlap: Optional[int] = 200,\n    ) -> list[Document]:\n        \"\"\"\n        Split text into chunks of a specified length.\n\n        Args:\n            separators (list[str]): The characters to split on.\n            chunk_size (int): The maximum length of each chunk.\n            chunk_overlap (int): The amount of overlap between chunks.\n            length_function (function): The function to use to calculate the length of the text.\n\n        Returns:\n            list[str]: The chunks of text.\n        \"\"\"\n        from langchain.text_splitter import RecursiveCharacterTextSplitter\n\n        if separators == \"\":\n            separators = None\n        elif separators:\n            # check if the separators list has escaped characters\n            # if there are escaped characters, unescape them\n            separators = [x.encode().decode(\"unicode-escape\") for x in separators]\n\n        # Make sure chunk_size and chunk_overlap are ints\n        if isinstance(chunk_size, str):\n            chunk_size = int(chunk_size)\n        if isinstance(chunk_overlap, str):\n            chunk_overlap = int(chunk_overlap)\n        splitter = RecursiveCharacterTextSplitter(\n            separators=separators,\n            chunk_size=chunk_size,\n            chunk_overlap=chunk_overlap,\n        )\n\n        docs = splitter.split_documents(documents)\n        # self.repr_value = build_loader_repr_from_documents(docs)\n        self.repr_value = separators\n        return docs\n","password":false,"name":"code","advanced":false,"type":"code","list":false},"_type":"CustomComponent","chunk_overlap":{"required":false,"placeholder":"","show":true,"multiline":false,"value":200,"password":false,"name":"chunk_overlap","display_name":"Chunk Overlap","advanced":false,"dynamic":false,"info":"The amount of overlap between chunks.","type":"int","list":false},"chunk_size":{"required":false,"placeholder":"","show":true,"multiline":false,"value":1000,"password":false,"name":"chunk_size","display_name":"Chunk Size","advanced":false,"dynamic":false,"info":"The maximum length of each chunk.","type":"int","list":false},"documents":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"documents","display_name":"Documents","advanced":false,"dynamic":false,"info":"The documents to split.","type":"Document","list":true},"separators":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"separators","display_name":"Separators","advanced":false,"dynamic":false,"info":"The characters to split on.\nIf left empty defaults to [\"\\n\\n\", \"\\n\", \" \", \"\"].","type":"str","list":true,"value":["."]}},"description":"Split text into chunks of a specified length.","base_classes":["Document"],"display_name":"Recursive Character Text Splitter","custom_fields":{"chunk_overlap":null,"chunk_size":null,"documents":null,"separators":null},"output_types":["RecursiveCharacterTextSplitter"],"documentation":"https://docs.langflow.org/components/text-splitters#recursivecharactertextsplitter","beta":true,"error":null},"id":"RecursiveCharacterTextSplitter-NgDKg","value":null},"positionAbsolute":{"x":534,"y":-53.28125},"selected":false,"dragging":false}],"edges":[{"source":"VectorStoreInfo-2D4sx","target":"VectorStoreAgent-VYVDt","sourceHandle":"VectorStoreInfo|VectorStoreInfo-2D4sx|VectorStoreInfo","targetHandle":"VectorStoreInfo|vectorstoreinfo|VectorStoreAgent-VYVDt","id":"reactflow__edge-VectorStoreInfo-2D4sxVectorStoreInfo|VectorStoreInfo-2D4sx|VectorStoreInfo-VectorStoreAgent-VYVDtVectorStoreInfo|vectorstoreinfo|VectorStoreAgent-VYVDt","style":{"stroke":"#555"},"className":"","animated":false,"selected":false},{"source":"Chroma-2dU4y","target":"VectorStoreInfo-2D4sx","sourceHandle":"Chroma|Chroma-2dU4y|VectorStore|Chroma|BaseRetriever|VectorStoreRetriever","targetHandle":"VectorStore|vectorstore|VectorStoreInfo-2D4sx","id":"reactflow__edge-Chroma-2dU4yChroma|Chroma-2dU4y|VectorStore|Chroma|BaseRetriever|VectorStoreRetriever-VectorStoreInfo-2D4sxVectorStore|vectorstore|VectorStoreInfo-2D4sx","style":{"stroke":"#555"},"className":"","animated":false,"selected":false},{"source":"ChatOpenAI-tLSgZ","target":"VectorStoreAgent-VYVDt","sourceHandle":"ChatOpenAI|ChatOpenAI-tLSgZ|BaseLanguageModel|BaseChatModel|ChatOpenAI|BaseLLM","targetHandle":"BaseLanguageModel|llm|VectorStoreAgent-VYVDt","id":"reactflow__edge-ChatOpenAI-tLSgZChatOpenAI|ChatOpenAI-tLSgZ|BaseLanguageModel|ChatOpenAI|BaseChatModel|BaseLLM-VectorStoreAgent-VYVDtBaseLanguageModel|llm|VectorStoreAgent-VYVDt","style":{"stroke":"#555"},"className":"","animated":false,"selected":false},{"source":"OpenAIEmbeddings-C0ObR","target":"Chroma-2dU4y","sourceHandle":"OpenAIEmbeddings|OpenAIEmbeddings-C0ObR|Embeddings|OpenAIEmbeddings","targetHandle":"Embeddings|embedding|Chroma-2dU4y","id":"reactflow__edge-OpenAIEmbeddings-C0ObROpenAIEmbeddings|OpenAIEmbeddings-C0ObR|OpenAIEmbeddings|Embeddings-Chroma-2dU4yEmbeddings|embedding|Chroma-2dU4y","style":{"stroke":"#555"},"className":"","animated":false,"selected":false},{"source":"ChatOpenAI-tLSgZ","target":"LLMChain-x0Bo8","sourceHandle":"ChatOpenAI|ChatOpenAI-tLSgZ|BaseLanguageModel|BaseChatModel|ChatOpenAI|BaseLLM","targetHandle":"BaseLanguageModel|llm|LLMChain-x0Bo8","id":"reactflow__edge-ChatOpenAI-tLSgZChatOpenAI|ChatOpenAI-tLSgZ|BaseLanguageModel|ChatOpenAI|BaseChatModel|BaseLLM-LLMChain-x0Bo8BaseLanguageModel|llm|LLMChain-x0Bo8","style":{"stroke":"#555"},"className":"","animated":false,"selected":false},{"source":"PromptTemplate-WbiuD","target":"LLMChain-x0Bo8","sourceHandle":"PromptTemplate|PromptTemplate-WbiuD|PromptTemplate|BasePromptTemplate|StringPromptTemplate","targetHandle":"BasePromptTemplate|prompt|LLMChain-x0Bo8","id":"reactflow__edge-PromptTemplate-WbiuDPromptTemplate|PromptTemplate-WbiuD|StringPromptTemplate|BasePromptTemplate|PromptTemplate-LLMChain-x0Bo8BasePromptTemplate|prompt|LLMChain-x0Bo8","style":{"stroke":"#555"},"className":"","animated":false,"selected":false},{"source":"VectorStoreAgent-VYVDt","target":"CustomComponent-0CQD6","sourceHandle":"VectorStoreAgent|VectorStoreAgent-VYVDt|AgentExecutor","targetHandle":"AgentExecutor|agent|CustomComponent-0CQD6","id":"reactflow__edge-VectorStoreAgent-VYVDtVectorStoreAgent|VectorStoreAgent-VYVDt|AgentExecutor-CustomComponent-0CQD6AgentExecutor|agent|CustomComponent-0CQD6","style":{"stroke":"#555"},"className":"","animated":false,"selected":false},{"source":"WebBaseLoader-EfdbB","sourceHandle":"WebBaseLoader|WebBaseLoader-EfdbB|Document","target":"RecursiveCharacterTextSplitter-NgDKg","targetHandle":"Document|documents|RecursiveCharacterTextSplitter-NgDKg","style":{"stroke":"#555"},"className":"","animated":false,"id":"reactflow__edge-WebBaseLoader-EfdbBWebBaseLoader|WebBaseLoader-EfdbB|Document-RecursiveCharacterTextSplitter-NgDKgDocument|documents|RecursiveCharacterTextSplitter-NgDKg"},{"source":"RecursiveCharacterTextSplitter-NgDKg","sourceHandle":"RecursiveCharacterTextSplitter|RecursiveCharacterTextSplitter-NgDKg|Document","target":"Chroma-2dU4y","targetHandle":"Document|documents|Chroma-2dU4y","style":{"stroke":"#555"},"className":"","animated":false,"id":"reactflow__edge-RecursiveCharacterTextSplitter-NgDKgRecursiveCharacterTextSplitter|RecursiveCharacterTextSplitter-NgDKg|Document-Chroma-2dU4yDocument|documents|Chroma-2dU4y"}],"viewport":{"x":73.37949424026829,"y":234.13089127020038,"zoom":0.4024179736196047}},"id":"923fa07b-0808-40ad-8d2c-750ff415657a","style":null}