{"name":"CSVloader","description":"Empowering Enterprises with Intelligent Interactions.","data":{"nodes":[{"width":384,"height":535,"id":"RecursiveCharacterTextSplitter-5n2iC","type":"genericNode","position":{"x":480.66732297584645,"y":291.51153468095606},"data":{"type":"RecursiveCharacterTextSplitter","node":{"template":{"code":{"dynamic":true,"required":true,"placeholder":"","show":false,"multiline":true,"value":"from typing import Optional\nfrom langflow import CustomComponent\nfrom langchain.schema import Document\n\n\nclass RecursiveCharacterTextSplitterComponent(CustomComponent):\n    display_name: str = \"Recursive Character Text Splitter\"\n    description: str = \"Split text into chunks of a specified length.\"\n    documentation: str = \"https://docs.langflow.org/components/text-splitters#recursivecharactertextsplitter\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\n                \"display_name\": \"Documents\",\n                \"info\": \"The documents to split.\",\n            },\n            \"separators\": {\n                \"display_name\": \"Separators\",\n                \"info\": 'The characters to split on.\\nIf left empty defaults to [\"\\\\n\\\\n\", \"\\\\n\", \" \", \"\"].',\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\n                \"display_name\": \"Chunk Size\",\n                \"info\": \"The maximum length of each chunk.\",\n                \"field_type\": \"int\",\n                \"value\": 1000,\n            },\n            \"chunk_overlap\": {\n                \"display_name\": \"Chunk Overlap\",\n                \"info\": \"The amount of overlap between chunks.\",\n                \"field_type\": \"int\",\n                \"value\": 200,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        documents: list[Document],\n        separators: Optional[list[str]] = None,\n        chunk_size: Optional[int] = 1000,\n        chunk_overlap: Optional[int] = 200,\n    ) -> list[Document]:\n        \"\"\"\n        Split text into chunks of a specified length.\n\n        Args:\n            separators (list[str]): The characters to split on.\n            chunk_size (int): The maximum length of each chunk.\n            chunk_overlap (int): The amount of overlap between chunks.\n            length_function (function): The function to use to calculate the length of the text.\n\n        Returns:\n            list[str]: The chunks of text.\n        \"\"\"\n        from langchain.text_splitter import RecursiveCharacterTextSplitter\n\n        if separators == \"\":\n            separators = None\n        elif separators:\n            # check if the separators list has escaped characters\n            # if there are escaped characters, unescape them\n            separators = [x.encode().decode(\"unicode-escape\") for x in separators]\n\n        # Make sure chunk_size and chunk_overlap are ints\n        if isinstance(chunk_size, str):\n            chunk_size = int(chunk_size)\n        if isinstance(chunk_overlap, str):\n            chunk_overlap = int(chunk_overlap)\n        splitter = RecursiveCharacterTextSplitter(\n            separators=separators,\n            chunk_size=chunk_size,\n            chunk_overlap=chunk_overlap,\n        )\n\n        docs = splitter.split_documents(documents)\n        # self.repr_value = build_loader_repr_from_documents(docs)\n        self.repr_value = separators\n        return docs\n","password":false,"name":"code","advanced":false,"type":"code","list":false},"_type":"CustomComponent","chunk_overlap":{"required":false,"placeholder":"","show":true,"multiline":false,"value":200,"password":false,"name":"chunk_overlap","display_name":"Chunk Overlap","advanced":false,"dynamic":false,"info":"The amount of overlap between chunks.","type":"int","list":false},"chunk_size":{"required":false,"placeholder":"","show":true,"multiline":false,"value":1000,"password":false,"name":"chunk_size","display_name":"Chunk Size","advanced":false,"dynamic":false,"info":"The maximum length of each chunk.","type":"int","list":false},"documents":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"documents","display_name":"Documents","advanced":false,"dynamic":false,"info":"The documents to split.","type":"Document","list":true},"separators":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"separators","display_name":"Separators","advanced":false,"dynamic":false,"info":"The characters to split on.\nIf left empty defaults to [\"\\n\\n\", \"\\n\", \" \", \"\"].","type":"str","list":true,"value":[".",""]}},"description":"Split text into chunks of a specified length.","base_classes":["Document"],"display_name":"Recursive Character Text Splitter","custom_fields":{"chunk_overlap":null,"chunk_size":null,"documents":null,"separators":null},"output_types":["RecursiveCharacterTextSplitter"],"documentation":"https://docs.langflow.org/components/text-splitters#recursivecharactertextsplitter","beta":true,"error":null},"id":"RecursiveCharacterTextSplitter-5n2iC","value":null},"selected":false,"dragging":false,"positionAbsolute":{"x":480.66732297584645,"y":291.51153468095606}},{"width":384,"height":359,"id":"OpenAIEmbeddings-Jodo9","type":"genericNode","position":{"x":18,"y":521.8799989183118},"data":{"type":"OpenAIEmbeddings","node":{"template":{"allowed_special":{"required":false,"placeholder":"","show":true,"multiline":false,"value":[],"password":false,"name":"allowed_special","advanced":true,"dynamic":false,"info":"","type":"Literal'all'","list":true},"disallowed_special":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"all","password":false,"name":"disallowed_special","advanced":true,"dynamic":false,"info":"","type":"Literal'all'","list":true},"chunk_size":{"required":false,"placeholder":"","show":true,"multiline":false,"value":1000,"password":false,"name":"chunk_size","advanced":true,"dynamic":false,"info":"","type":"int","list":false},"client":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"client","advanced":true,"dynamic":false,"info":"","type":"Any","list":false},"deployment":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"text-embedding-ada-002","password":false,"name":"deployment","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"embedding_ctx_length":{"required":false,"placeholder":"","show":true,"multiline":false,"value":8191,"password":false,"name":"embedding_ctx_length","advanced":true,"dynamic":false,"info":"","type":"int","list":false},"headers":{"required":false,"placeholder":"","show":false,"multiline":true,"value":"{'Authorization': 'Bearer <token>'}","password":false,"name":"headers","advanced":true,"dynamic":false,"info":"","type":"Any","list":false},"max_retries":{"required":false,"placeholder":"","show":true,"multiline":false,"value":6,"password":false,"name":"max_retries","advanced":true,"dynamic":false,"info":"","type":"int","list":false},"model":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"text-embedding-ada-002","password":false,"name":"model","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"model_kwargs":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"model_kwargs","advanced":true,"dynamic":false,"info":"","type":"code","list":false},"openai_api_base":{"required":false,"placeholder":"","show":true,"multiline":false,"password":true,"name":"openai_api_base","display_name":"OpenAI API Base","advanced":true,"dynamic":false,"info":"","type":"str","list":false,"value":""},"openai_api_key":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"","password":true,"name":"openai_api_key","display_name":"OpenAI API Key","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"openai_api_type":{"required":false,"placeholder":"","show":true,"multiline":false,"password":true,"name":"openai_api_type","display_name":"OpenAI API Type","advanced":true,"dynamic":false,"info":"","type":"str","list":false,"value":""},"openai_api_version":{"required":false,"placeholder":"","show":true,"multiline":false,"password":true,"name":"openai_api_version","display_name":"OpenAI API Version","advanced":true,"dynamic":false,"info":"","type":"str","list":false,"value":""},"openai_organization":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"openai_organization","display_name":"OpenAI Organization","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"openai_proxy":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"openai_proxy","display_name":"OpenAI Proxy","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"request_timeout":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"request_timeout","advanced":true,"dynamic":false,"info":"","type":"float","list":false},"show_progress_bar":{"required":false,"placeholder":"","show":true,"multiline":false,"value":false,"password":false,"name":"show_progress_bar","advanced":true,"dynamic":false,"info":"","type":"bool","list":false},"tiktoken_model_name":{"required":false,"placeholder":"","show":true,"multiline":false,"password":true,"name":"tiktoken_model_name","advanced":false,"dynamic":false,"info":"","type":"str","list":false,"value":""},"_type":"OpenAIEmbeddings"},"description":"OpenAI embedding models.","base_classes":["Embeddings","OpenAIEmbeddings"],"display_name":"OpenAIEmbeddings","custom_fields":{},"output_types":[],"documentation":"https://python.langchain.com/docs/modules/data_connection/text_embedding/integrations/openai","beta":false,"error":null},"id":"OpenAIEmbeddings-Jodo9","value":null},"selected":false,"positionAbsolute":{"x":18,"y":521.8799989183118}},{"width":384,"height":621,"id":"ChatOpenAI-z1fnm","type":"genericNode","position":{"x":904.9357499515409,"y":20},"data":{"type":"ChatOpenAI","node":{"template":{"callbacks":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"callbacks","advanced":false,"dynamic":false,"info":"","type":"langchain.callbacks.base.BaseCallbackHandler","list":true},"cache":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"cache","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"client":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"client","advanced":false,"dynamic":false,"info":"","type":"Any","list":false},"max_retries":{"required":false,"placeholder":"","show":false,"multiline":false,"value":6,"password":false,"name":"max_retries","advanced":false,"dynamic":false,"info":"","type":"int","list":false},"max_tokens":{"required":false,"placeholder":"","show":true,"multiline":false,"password":true,"name":"max_tokens","advanced":false,"dynamic":false,"info":"","type":"int","list":false,"value":""},"metadata":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"metadata","advanced":false,"dynamic":false,"info":"","type":"code","list":false},"model_kwargs":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"model_kwargs","advanced":true,"dynamic":false,"info":"","type":"code","list":false},"model_name":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"gpt-3.5-turbo","password":false,"options":["gpt-3.5-turbo-0613","gpt-3.5-turbo","gpt-3.5-turbo-16k-0613","gpt-3.5-turbo-16k","gpt-4-0613","gpt-4-32k-0613","gpt-4","gpt-4-32k"],"name":"model_name","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"n":{"required":false,"placeholder":"","show":false,"multiline":false,"value":1,"password":false,"name":"n","advanced":false,"dynamic":false,"info":"","type":"int","list":false},"openai_api_base":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"openai_api_base","display_name":"OpenAI API Base","advanced":false,"dynamic":false,"info":"\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n","type":"str","list":false},"openai_api_key":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"","password":true,"name":"openai_api_key","display_name":"OpenAI API Key","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"openai_organization":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"openai_organization","display_name":"OpenAI Organization","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"openai_proxy":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"openai_proxy","display_name":"OpenAI Proxy","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"request_timeout":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"request_timeout","advanced":false,"dynamic":false,"info":"","type":"float","list":false},"streaming":{"required":false,"placeholder":"","show":false,"multiline":false,"value":false,"password":false,"name":"streaming","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"tags":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"tags","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"temperature":{"required":false,"placeholder":"","show":true,"multiline":false,"value":0.7,"password":false,"name":"temperature","advanced":false,"dynamic":false,"info":"","type":"float","list":false},"tiktoken_model_name":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"tiktoken_model_name","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"verbose":{"required":false,"placeholder":"","show":false,"multiline":false,"value":false,"password":false,"name":"verbose","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"_type":"ChatOpenAI"},"description":"Wrapper around OpenAI Chat large language models.","base_classes":["BaseLanguageModel","ChatOpenAI","BaseChatModel","BaseLLM"],"display_name":"ChatOpenAI","custom_fields":{},"output_types":[],"documentation":"https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai","beta":false,"error":null},"id":"ChatOpenAI-z1fnm","value":null},"selected":false,"positionAbsolute":{"x":904.9357499515409,"y":20}},{"width":384,"height":317,"id":"CombineDocsChain-z2E01","type":"genericNode","position":{"x":1373.4171531352365,"y":138.68654398427685},"data":{"type":"CombineDocsChain","node":{"template":{"llm":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"llm","display_name":"LLM","advanced":false,"dynamic":false,"info":"","type":"BaseLanguageModel","list":false},"chain_type":{"required":true,"placeholder":"","show":true,"multiline":false,"value":"stuff","password":false,"options":["stuff","map_reduce","map_rerank","refine"],"name":"chain_type","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"_type":"load_qa_chain"},"description":"Load question answering chain.","base_classes":["BaseCombineDocumentsChain","function"],"display_name":"CombineDocsChain","custom_fields":{},"output_types":[],"documentation":"","beta":false,"error":null},"id":"CombineDocsChain-z2E01","value":null},"selected":false,"positionAbsolute":{"x":1373.4171531352365,"y":138.68654398427685}},{"width":384,"height":307,"id":"RetrievalQA-rl9ml","type":"genericNode","position":{"x":1583.5342491709177,"y":679.3083246075956},"data":{"type":"RetrievalQA","node":{"template":{"callbacks":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"callbacks","advanced":false,"dynamic":false,"info":"","type":"langchain.callbacks.base.BaseCallbackHandler","list":true},"combine_documents_chain":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"combine_documents_chain","advanced":false,"dynamic":false,"info":"","type":"BaseCombineDocumentsChain","list":false},"memory":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"memory","advanced":false,"dynamic":false,"info":"","type":"BaseMemory","list":false},"retriever":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"retriever","advanced":false,"dynamic":false,"info":"","type":"BaseRetriever","list":false},"input_key":{"required":true,"placeholder":"","show":true,"multiline":false,"value":"query","password":false,"name":"input_key","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"metadata":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"metadata","advanced":false,"dynamic":false,"info":"","type":"code","list":false},"output_key":{"required":true,"placeholder":"","show":true,"multiline":false,"value":"result","password":false,"name":"output_key","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"return_source_documents":{"required":false,"placeholder":"","show":true,"multiline":false,"value":true,"password":false,"name":"return_source_documents","advanced":true,"dynamic":false,"info":"","type":"bool","list":false},"tags":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"tags","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"verbose":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"verbose","advanced":true,"dynamic":false,"info":"","type":"bool","list":false},"_type":"RetrievalQA"},"description":"Chain for question-answering against an index.","base_classes":["Chain","BaseRetrievalQA","RetrievalQA","function"],"display_name":"RetrievalQA","custom_fields":{},"output_types":[],"documentation":"https://python.langchain.com/docs/modules/chains/popular/vector_db_qa","beta":false,"error":null},"id":"RetrievalQA-rl9ml","value":null},"selected":false,"positionAbsolute":{"x":1583.5342491709177,"y":679.3083246075956}},{"width":384,"height":515,"id":"Chroma-4OmVk","type":"genericNode","position":{"x":931.4200867162817,"y":806.7854429698407},"data":{"type":"Chroma","node":{"template":{"client":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"client","advanced":false,"dynamic":false,"info":"","type":"chromadb.Client","list":false},"client_settings":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"client_settings","advanced":false,"dynamic":false,"info":"","type":"chromadb.config.Setting","list":true},"documents":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"documents","display_name":"Documents","advanced":false,"dynamic":false,"info":"","type":"Document","list":true},"embedding":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"embedding","display_name":"Embedding","advanced":false,"dynamic":false,"info":"","type":"Embeddings","list":false},"chroma_server_cors_allow_origins":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"chroma_server_cors_allow_origins","display_name":"Chroma Server CORS Allow Origins","advanced":true,"dynamic":false,"info":"","type":"str","list":true},"chroma_server_grpc_port":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"chroma_server_grpc_port","display_name":"Chroma Server GRPC Port","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"chroma_server_host":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"chroma_server_host","display_name":"Chroma Server Host","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"chroma_server_http_port":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"chroma_server_http_port","display_name":"Chroma Server HTTP Port","advanced":true,"dynamic":false,"info":"","type":"str","list":false},"chroma_server_ssl_enabled":{"required":false,"placeholder":"","show":true,"multiline":false,"value":false,"password":false,"name":"chroma_server_ssl_enabled","display_name":"Chroma Server SSL Enabled","advanced":true,"dynamic":false,"info":"","type":"bool","list":false},"collection_metadata":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"collection_metadata","advanced":false,"dynamic":false,"info":"","type":"code","list":false},"collection_name":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"langchain","password":false,"name":"collection_name","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"ids":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"ids","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"metadatas":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"metadatas","advanced":false,"dynamic":false,"info":"","type":"code","list":true},"persist":{"required":false,"placeholder":"","show":true,"multiline":false,"value":true,"password":false,"name":"persist","display_name":"Persist","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"persist_directory":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"persist_directory","advanced":false,"dynamic":false,"info":"","type":"str","list":false,"value":"pen"},"search_kwargs":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"{}","password":false,"name":"search_kwargs","advanced":true,"dynamic":false,"info":"","type":"code","list":false},"_type":"Chroma"},"description":"Create a Chroma vectorstore from a raw documents.","base_classes":["VectorStore","Chroma","BaseRetriever","VectorStoreRetriever"],"display_name":"Chroma","custom_fields":{},"output_types":[],"documentation":"https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/chroma","beta":false,"error":null},"id":"Chroma-4OmVk","value":null},"selected":false,"positionAbsolute":{"x":931.4200867162817,"y":806.7854429698407}},{"width":384,"height":359,"id":"CSVLoader-pOH0k","type":"genericNode","position":{"x":-42,"y":38.71875},"data":{"type":"CSVLoader","node":{"template":{"file_path":{"required":true,"placeholder":"","show":true,"multiline":false,"value":"pencil.csv","suffixes":[".csv"],"password":false,"name":"file_path","advanced":false,"dynamic":false,"info":"","type":"file","list":false,"fileTypes":["csv"],"file_path":null},"metadata":{"required":true,"placeholder":"","show":true,"multiline":false,"value":"{}","password":false,"name":"metadata","display_name":"Metadata","advanced":false,"dynamic":false,"info":"","type":"code","list":false},"_type":"CSVLoader"},"description":"Loads a CSV file into a list of documents.","base_classes":["Document"],"display_name":"CSVLoader","custom_fields":{},"output_types":["Document"],"documentation":"https://python.langchain.com/docs/modules/data_connection/document_loaders/integrations/csv","beta":false,"error":null},"id":"CSVLoader-pOH0k","value":null},"selected":false,"positionAbsolute":{"x":-42,"y":38.71875},"dragging":false}],"edges":[{"source":"ChatOpenAI-z1fnm","target":"CombineDocsChain-z2E01","sourceHandle":"ChatOpenAI|ChatOpenAI-z1fnm|BaseLanguageModel|ChatOpenAI|BaseChatModel|BaseLLM","targetHandle":"BaseLanguageModel|llm|CombineDocsChain-z2E01","id":"reactflow__edge-ChatOpenAI-z1fnmChatOpenAI|ChatOpenAI-z1fnm|BaseChatModel|BaseLanguageModel|ChatOpenAI|BaseLLM-CombineDocsChain-z2E01BaseLanguageModel|llm|CombineDocsChain-z2E01","style":{"stroke":"#555"},"className":"","animated":false,"selected":false},{"source":"CombineDocsChain-z2E01","target":"RetrievalQA-rl9ml","sourceHandle":"CombineDocsChain|CombineDocsChain-z2E01|BaseCombineDocumentsChain|function","targetHandle":"BaseCombineDocumentsChain|combine_documents_chain|RetrievalQA-rl9ml","id":"reactflow__edge-CombineDocsChain-z2E01CombineDocsChain|CombineDocsChain-z2E01|BaseCombineDocumentsChain|function-RetrievalQA-rl9mlBaseCombineDocumentsChain|combine_documents_chain|RetrievalQA-rl9ml","style":{"stroke":"#555"},"className":"","animated":false,"selected":false},{"source":"OpenAIEmbeddings-Jodo9","target":"Chroma-4OmVk","sourceHandle":"OpenAIEmbeddings|OpenAIEmbeddings-Jodo9|Embeddings|OpenAIEmbeddings","targetHandle":"Embeddings|embedding|Chroma-4OmVk","id":"reactflow__edge-OpenAIEmbeddings-Jodo9OpenAIEmbeddings|OpenAIEmbeddings-Jodo9|Embeddings|OpenAIEmbeddings-Chroma-4OmVkEmbeddings|embedding|Chroma-4OmVk","style":{"stroke":"#555"},"className":"","animated":false,"selected":false},{"source":"RecursiveCharacterTextSplitter-5n2iC","target":"Chroma-4OmVk","sourceHandle":"RecursiveCharacterTextSplitter|RecursiveCharacterTextSplitter-5n2iC|Document","targetHandle":"Document|documents|Chroma-4OmVk","id":"reactflow__edge-RecursiveCharacterTextSplitter-5n2iCRecursiveCharacterTextSplitter|RecursiveCharacterTextSplitter-5n2iC|Document-Chroma-4OmVkDocument|documents|Chroma-4OmVk","style":{"stroke":"#555"},"className":"","animated":false,"selected":false},{"source":"Chroma-4OmVk","target":"RetrievalQA-rl9ml","sourceHandle":"Chroma|Chroma-4OmVk|VectorStore|Chroma|BaseRetriever|VectorStoreRetriever","targetHandle":"BaseRetriever|retriever|RetrievalQA-rl9ml","id":"reactflow__edge-Chroma-4OmVkChroma|Chroma-4OmVk|Chroma|VectorStore|BaseRetriever|VectorStoreRetriever-RetrievalQA-rl9mlBaseRetriever|retriever|RetrievalQA-rl9ml","style":{"stroke":"#555"},"className":"","animated":false,"selected":false},{"source":"CSVLoader-pOH0k","sourceHandle":"CSVLoader|CSVLoader-pOH0k|Document","target":"RecursiveCharacterTextSplitter-5n2iC","targetHandle":"Document|documents|RecursiveCharacterTextSplitter-5n2iC","style":{"stroke":"#555"},"className":"","animated":false,"id":"reactflow__edge-CSVLoader-pOH0kCSVLoader|CSVLoader-pOH0k|Document-RecursiveCharacterTextSplitter-5n2iCDocument|documents|RecursiveCharacterTextSplitter-5n2iC"}],"viewport":{"x":260.97881732037956,"y":27.866626679334274,"zoom":0.6180323023969272}},"id":"a724e8a7-1eac-4317-b34b-4d058ab99792","style":null}