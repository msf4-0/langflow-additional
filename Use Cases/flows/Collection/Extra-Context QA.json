{"id":"7172e5ab-3972-4a0b-88fa-d0525c9b762a","name":"Extra-Context QA","data":{"nodes":[{"width":384,"height":425,"id":"CustomComponent-63aa3","type":"genericNode","position":{"x":1826.8240461960877,"y":184.90282602049646},"data":{"type":"CustomComponent","node":{"template":{"llm":{"type":"BaseLLM","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"llm","display_name":"llm","advanced":false,"dynamic":false,"info":"","value":""},"prompt":{"type":"PromptTemplate","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"prompt","display_name":"prompt","advanced":false,"dynamic":false,"info":"","value":""},"vector_store":{"type":"VectorStore","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"vector_store","display_name":"vector_store","advanced":false,"dynamic":false,"info":"","value":""},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom langflow.field_typing import Data, BaseLLM, PromptTemplate, VectorStore, Chain\nfrom langchain.chains import RetrievalQA\n\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.langflow.org/components/custom\"\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate, vector_store: VectorStore) -> Chain:\n        retrieval_qa = RetrievalQA.from_llm(llm=llm, prompt=prompt, retriever=vector_store.as_retriever())\n        return retrieval_qa","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":""},"_type":"CustomComponent"},"base_classes":["Chain"],"display_name":"RetrievalQA","documentation":"http://docs.langflow.org/components/custom","custom_fields":{"llm":null,"prompt":null,"vector_store":null},"output_types":["Chain"],"field_formatters":{},"beta":true},"id":"CustomComponent-63aa3"},"selected":false,"dragging":false,"positionAbsolute":{"x":1826.8240461960877,"y":184.90282602049646}},{"width":384,"height":563,"id":"PromptTemplate-iBBGK","type":"genericNode","position":{"x":1066.5385259418035,"y":18.01220401434378},"data":{"type":"PromptTemplate","node":{"template":{"output_parser":{"type":"BaseOutputParser","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"output_parser","advanced":false,"dynamic":true,"info":""},"input_types":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"input_types","advanced":false,"dynamic":true,"info":""},"input_variables":{"type":"str","required":true,"placeholder":"","list":true,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"input_variables","advanced":false,"dynamic":true,"info":"","value":["description","context","question"]},"partial_variables":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"partial_variables","advanced":false,"dynamic":true,"info":""},"template":{"type":"prompt","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"fileTypes":[],"password":false,"name":"template","advanced":false,"dynamic":true,"info":"","value":"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n---\n\nInitial description:\n\n{description}\n\nPotentially relevant chunks are displayed below with the \"Context:\" preamble.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\n"},"template_format":{"type":"str","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"value":"f-string","fileTypes":[],"password":false,"name":"template_format","advanced":false,"dynamic":true,"info":""},"validate_template":{"type":"bool","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"value":false,"fileTypes":[],"password":false,"name":"validate_template","advanced":false,"dynamic":true,"info":""},"_type":"PromptTemplate","context":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":true,"value":"","fileTypes":[],"file_path":"","password":false,"name":"context","display_name":"context","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":""},"question":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":true,"value":"","fileTypes":[],"file_path":"","password":false,"name":"question","display_name":"question","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":""},"description":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":true,"value":"\"The Egg\" is a short story by American writer Andy Weir, first published on his website Galactanet on August 15, 2009. It is Weir's most popular short story, and has been translated into over 30 languages by readers. The story follows a nameless 48-year-old man who discovers the \"meaning of life\" after he dies.","fileTypes":[],"file_path":"","password":false,"name":"description","display_name":"description","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":""}},"description":"A prompt template for a language model.","base_classes":["PromptTemplate","StringPromptTemplate","BasePromptTemplate"],"name":"","display_name":"PromptTemplate","documentation":"https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/","custom_fields":{"":["description","context","question"]},"output_types":[],"full_path":null,"field_formatters":{},"beta":false,"error":null},"id":"PromptTemplate-iBBGK"},"selected":false,"positionAbsolute":{"x":1066.5385259418035,"y":18.01220401434378},"dragging":false},{"width":384,"height":539,"id":"Chroma-RZMrP","type":"genericNode","position":{"x":1065.0627054574675,"y":643.5803504914365},"data":{"type":"Chroma","node":{"template":{"code":{"dynamic":true,"required":true,"placeholder":"","show":false,"multiline":true,"value":"from typing import Optional, Union\nfrom langflow import CustomComponent\n\nfrom langchain.vectorstores import Chroma\nfrom langchain.schema import Document\nfrom langchain.vectorstores.base import VectorStore\nfrom langchain.schema import BaseRetriever\nfrom langchain.embeddings.base import Embeddings\nimport chromadb  # type: ignore\n\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"langflow\"},\n            \"persist\": {\"display_name\": \"Persist\"},\n            \"persist_directory\": {\"display_name\": \"Persist Directory\"},\n            \"code\": {\"show\": False, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        collection_name: str,\n        persist: bool,\n        chroma_server_ssl_enabled: bool,\n        persist_directory: Optional[str] = None,\n        embedding: Optional[Embeddings] = None,\n        documents: Optional[Document] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n        # If documents, then we need to create a Chroma instance using .from_documents\n        if documents is not None and embedding is not None:\n            return Chroma.from_documents(\n                documents=documents,  # type: ignore\n                persist_directory=persist_directory if persist else None,\n                collection_name=collection_name,\n                embedding=embedding,\n                client_settings=chroma_settings,\n            )\n\n        return Chroma(persist_directory=persist_directory, client_settings=chroma_settings)\n","password":false,"name":"code","advanced":false,"type":"code","list":false},"_type":"CustomComponent","chroma_server_cors_allow_origins":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"chroma_server_cors_allow_origins","display_name":"Server CORS Allow Origins","advanced":true,"dynamic":false,"info":""},"chroma_server_grpc_port":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"chroma_server_grpc_port","display_name":"Server gRPC Port","advanced":true,"dynamic":false,"info":""},"chroma_server_host":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"chroma_server_host","display_name":"Server Host","advanced":true,"dynamic":false,"info":""},"chroma_server_port":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"chroma_server_port","display_name":"Server Port","advanced":true,"dynamic":false,"info":""},"chroma_server_ssl_enabled":{"type":"bool","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":false,"fileTypes":[],"file_path":"","password":false,"name":"chroma_server_ssl_enabled","display_name":"Server SSL Enabled","advanced":true,"dynamic":false,"info":""},"collection_name":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"langflow","fileTypes":[],"file_path":"","password":false,"name":"collection_name","display_name":"Collection Name","advanced":false,"dynamic":false,"info":""},"documents":{"type":"Document","required":false,"placeholder":"","list":true,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"documents","display_name":"Documents","advanced":false,"dynamic":false,"info":""},"embedding":{"type":"Embeddings","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"embedding","display_name":"Embedding","advanced":false,"dynamic":false,"info":""},"persist":{"type":"bool","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":true,"fileTypes":[],"file_path":"","password":false,"name":"persist","display_name":"Persist","advanced":false,"dynamic":false,"info":""},"persist_directory":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"persist_directory","display_name":"Persist Directory","advanced":false,"dynamic":false,"info":""}},"base_classes":["VectorStore","BaseRetriever"],"display_name":"Chroma","documentation":"https://python.langchain.com/docs/integrations/vectorstores/chroma","custom_fields":{"chroma_server_cors_allow_origins":null,"chroma_server_grpc_port":null,"chroma_server_host":null,"chroma_server_port":null,"chroma_server_ssl_enabled":null,"collection_name":null,"documents":null,"embedding":null,"persist":null,"persist_directory":null},"output_types":["Chroma"],"field_formatters":{},"beta":true,"description":"Implementation of Vector Store using Chroma"},"id":"Chroma-RZMrP"},"selected":false,"positionAbsolute":{"x":1065.0627054574675,"y":643.5803504914365},"dragging":false},{"width":384,"height":457,"id":"CustomComponent-8xbUY","type":"genericNode","position":{"x":-444.3961573897693,"y":512.3531305073253},"data":{"type":"CustomComponent","node":{"template":{"code":{"dynamic":true,"required":true,"placeholder":"","show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom langchain.schema import Document\nfrom typing import Any, Dict, List\n\nclass FileLoaderComponent(CustomComponent):\n    display_name: str = \"File Loader\"\n    description: str = \"A generic loader that auto-detects file types.\"\n    beta = True\n    loaders_info: List[Dict[str, Any]] = [\n    {\n        \"loader\": \"AirbyteJSONLoader\",\n        \"name\": \"Airbyte JSON (.jsonl)\",\n        \"import\": \"langchain.document_loaders.AirbyteJSONLoader\",\n        \"defaultFor\": [\"jsonl\"],\n        \"allowdTypes\": [\"jsonl\"],\n    },\n    {\n        \"loader\": \"JSONLoader\",\n        \"name\": \"JSON (.json)\",\n        \"import\": \"langchain.document_loaders.JSONLoader\",\n        \"defaultFor\": [\"json\"],\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"BSHTMLLoader\",\n        \"name\": \"BeautifulSoup4 HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.BSHTMLLoader\",\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"CSVLoader\",\n        \"name\": \"CSV (.csv)\",\n        \"import\": \"langchain.document_loaders.CSVLoader\",\n        \"defaultFor\": [\"csv\"],\n        \"allowdTypes\": [\"csv\"],\n    },\n    {\n        \"loader\": \"CoNLLULoader\",\n        \"name\": \"CoNLL-U (.conllu)\",\n        \"import\": \"langchain.document_loaders.CoNLLULoader\",\n        \"defaultFor\": [\"conllu\"],\n        \"allowdTypes\": [\"conllu\"],\n    },\n    {\n        \"loader\": \"EverNoteLoader\",\n        \"name\": \"EverNote (.enex)\",\n        \"import\": \"langchain.document_loaders.EverNoteLoader\",\n        \"defaultFor\": [\"enex\"],\n        \"allowdTypes\": [\"enex\"],\n    },\n    {\n        \"loader\": \"FacebookChatLoader\",\n        \"name\": \"Facebook Chat (.json)\",\n        \"import\": \"langchain.document_loaders.FacebookChatLoader\",\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"OutlookMessageLoader\",\n        \"name\": \"Outlook Message (.msg)\",\n        \"import\": \"langchain.document_loaders.OutlookMessageLoader\",\n        \"defaultFor\": [\"msg\"],\n        \"allowdTypes\": [\"msg\"],\n    },\n    {\n        \"loader\": \"PyPDFLoader\",\n        \"name\": \"PyPDF (.pdf)\",\n        \"import\": \"langchain.document_loaders.PyPDFLoader\",\n        \"defaultFor\": [\"pdf\"],\n        \"allowdTypes\": [\"pdf\"],\n    },\n    {\n        \"loader\": \"STRLoader\",\n        \"name\": \"Subtitle (.str)\",\n        \"import\": \"langchain.document_loaders.STRLoader\",\n        \"defaultFor\": [\"str\"],\n        \"allowdTypes\": [\"str\"],\n    },\n    {\n        \"loader\": \"TextLoader\",\n        \"name\": \"Text (.txt)\",\n        \"import\": \"langchain.document_loaders.TextLoader\",\n        \"defaultFor\": [\"txt\"],\n        \"allowdTypes\": [\"txt\"],\n    },\n    {\n        \"loader\": \"UnstructuredEmailLoader\",\n        \"name\": \"Unstructured Email (.eml)\",\n        \"import\": \"langchain.document_loaders.UnstructuredEmailLoader\",\n        \"defaultFor\": [\"eml\"],\n        \"allowdTypes\": [\"eml\"],\n    },\n    {\n        \"loader\": \"UnstructuredHTMLLoader\",\n        \"name\": \"Unstructured HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.UnstructuredHTMLLoader\",\n        \"defaultFor\": [\"html\", \"htm\"],\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"UnstructuredMarkdownLoader\",\n        \"name\": \"Unstructured Markdown (.md)\",\n        \"import\": \"langchain.document_loaders.UnstructuredMarkdownLoader\",\n        \"defaultFor\": [\"md\"],\n        \"allowdTypes\": [\"md\"],\n    },\n    {\n        \"loader\": \"UnstructuredPowerPointLoader\",\n        \"name\": \"Unstructured PowerPoint (.pptx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredPowerPointLoader\",\n        \"defaultFor\": [\"pptx\"],\n        \"allowdTypes\": [\"pptx\"],\n    },\n    {\n        \"loader\": \"UnstructuredWordLoader\",\n        \"name\": \"Unstructured Word (.docx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredWordLoader\",\n        \"defaultFor\": [\"docx\"],\n        \"allowdTypes\": [\"docx\"],\n    },\n]\n\n    def build_config(self):\n        loader_options = [\"Automatic\"] + [\n            loader_info[\"name\"] for loader_info in self.loaders_info\n        ]\n\n        file_types = []\n        suffixes = []\n\n        for loader_info in self.loaders_info:\n            if \"allowedTypes\" in loader_info:\n                file_types.extend(loader_info[\"allowedTypes\"])\n                suffixes.extend([f\".{ext}\" for ext in loader_info[\"allowedTypes\"]])\n\n        return {\n            \"file_path\": {\n                \"display_name\": \"File Path\",\n                \"required\": True,\n                \"field_type\": \"file\",\n                \"file_types\": [\n                    \"json\",\n                    \"txt\",\n                    \"csv\",\n                    \"jsonl\",\n                    \"html\",\n                    \"htm\",\n                    \"conllu\",\n                    \"enex\",\n                    \"msg\",\n                    \"pdf\",\n                    \"srt\",\n                    \"eml\",\n                    \"md\",\n                    \"pptx\",\n                    \"docx\",\n                ],\n                \"suffixes\": [\n                    \".json\",\n                    \".txt\",\n                    \".csv\",\n                    \".jsonl\",\n                    \".html\",\n                    \".htm\",\n                    \".conllu\",\n                    \".enex\",\n                    \".msg\",\n                    \".pdf\",\n                    \".srt\",\n                    \".eml\",\n                    \".md\",\n                    \".pptx\",\n                    \".docx\",\n                ],\n                # \"file_types\" : file_types,\n                # \"suffixes\": suffixes,\n            },\n            \"loader\": {\n                \"display_name\": \"Loader\",\n                \"is_list\": True,\n                \"required\": True,\n                \"options\": loader_options,\n                \"value\": \"Automatic\",\n            },\n        }\n\n    def build(self, file_path: str, loader: str) -> Document:\n        file_type = file_path.split(\".\")[-1]\n\n        # Mapeie o nome do loader selecionado para suas informações\n        selected_loader_info = None\n        for loader_info in self.loaders_info:\n            if loader_info[\"name\"] == loader:\n                selected_loader_info = loader_info\n                break\n\n        if selected_loader_info is None and loader != \"Automatic\":\n            raise ValueError(f\"Loader {loader} not found in the loader info list\")\n\n        if loader == \"Automatic\":\n            # Determine o loader automaticamente com base na extensão do arquivo\n            default_loader_info = None\n            for info in self.loaders_info:\n                if \"defaultFor\" in info and file_type in info[\"defaultFor\"]:\n                    default_loader_info = info\n                    break\n\n            if default_loader_info is None:\n                raise ValueError(f\"No default loader found for file type: {file_type}\")\n\n            selected_loader_info = default_loader_info\n        if isinstance(selected_loader_info, dict):\n            loader_import: str = selected_loader_info[\"import\"]\n        else:\n            raise ValueError(\n                f\"Loader info for {loader} is not a dict\\nLoader info:\\n{selected_loader_info}\"\n            )\n        module_name, class_name = loader_import.rsplit(\".\", 1)\n\n        try:\n            # Importe o loader dinamicamente\n            loader_module = __import__(module_name, fromlist=[class_name])\n            loader_instance = getattr(loader_module, class_name)\n        except ImportError as e:\n            raise ValueError(\n                f\"Loader {loader} could not be imported\\nLoader info:\\n{selected_loader_info}\"\n            ) from e\n\n        result = loader_instance(file_path=file_path)\n        result = result.load()\n        self.status = result\n        return result","password":false,"name":"code","advanced":false,"type":"code","list":false},"_type":"CustomComponent","file_path":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"file_path","display_name":"File Path","advanced":false,"dynamic":false,"info":"","type":"file","list":false,"fileTypes":["json","txt","csv","jsonl","html","htm","conllu","enex","msg","pdf","srt","eml","md","pptx","docx"],"file_path":"/Users/rodrigonader/Library/Caches/langflow/6cbe847b-068e-45e3-bcdc-8ae013bbf9cb/0b28ddc948ac9010f40aef685518c2f156c0bda5f498b7319dfe542fc6afa8cc.pdf","value":""},"loader":{"required":true,"placeholder":"","show":true,"multiline":false,"value":"Automatic","password":false,"options":["Automatic","Airbyte JSON (.jsonl)","JSON (.json)","BeautifulSoup4 HTML (.html, .htm)","CSV (.csv)","CoNLL-U (.conllu)","EverNote (.enex)","Facebook Chat (.json)","Outlook Message (.msg)","PyPDF (.pdf)","Subtitle (.str)","Text (.txt)","Unstructured Email (.eml)","Unstructured HTML (.html, .htm)","Unstructured Markdown (.md)","Unstructured PowerPoint (.pptx)","Unstructured Word (.docx)"],"name":"loader","display_name":"Loader","advanced":false,"dynamic":false,"info":"","type":"str","list":true}},"description":"A generic loader that auto-detects file types.","base_classes":["Document"],"display_name":"File Loader","custom_fields":{"file_path":null,"loader":null},"output_types":["Document"],"documentation":"","beta":true,"error":null,"official":false},"id":"CustomComponent-8xbUY"},"selected":false,"positionAbsolute":{"x":-444.3961573897693,"y":512.3531305073253},"dragging":false},{"width":384,"height":443,"id":"OpenAIEmbeddings-SVtZH","type":"genericNode","position":{"x":259.71169818227725,"y":798.3326731573329},"data":{"type":"OpenAIEmbeddings","node":{"template":{"allowed_special":{"type":"str","required":false,"placeholder":"","list":true,"show":true,"multiline":false,"value":[],"fileTypes":[],"password":false,"name":"allowed_special","advanced":true,"dynamic":false,"info":""},"async_client":{"type":"Any","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":false,"name":"async_client","advanced":true,"dynamic":false,"info":""},"chunk_size":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":1000,"fileTypes":[],"password":false,"name":"chunk_size","advanced":true,"dynamic":false,"info":""},"client":{"type":"Any","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":false,"name":"client","advanced":true,"dynamic":false,"info":""},"default_headers":{"type":"dict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":false,"name":"default_headers","advanced":true,"dynamic":false,"info":""},"default_query":{"type":"dict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":false,"name":"default_query","advanced":true,"dynamic":false,"info":""},"deployment":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":"text-embedding-ada-002","fileTypes":[],"password":false,"name":"deployment","advanced":true,"dynamic":false,"info":""},"disallowed_special":{"type":"str","required":false,"placeholder":"","list":true,"show":true,"multiline":false,"value":"all","fileTypes":[],"password":false,"name":"disallowed_special","advanced":true,"dynamic":false,"info":""},"embedding_ctx_length":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":8191,"fileTypes":[],"password":false,"name":"embedding_ctx_length","advanced":true,"dynamic":false,"info":""},"headers":{"type":"Any","required":false,"placeholder":"","list":false,"show":false,"multiline":true,"value":"{\"Authorization\": \"Bearer <token>\"}","fileTypes":[],"password":false,"name":"headers","advanced":true,"dynamic":false,"info":""},"http_client":{"type":"Any","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":false,"name":"http_client","advanced":true,"dynamic":false,"info":""},"max_retries":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":2,"fileTypes":[],"password":false,"name":"max_retries","advanced":true,"dynamic":false,"info":""},"model":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":"text-embedding-ada-002","fileTypes":[],"password":false,"name":"model","advanced":true,"dynamic":false,"info":""},"model_kwargs":{"type":"dict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":false,"name":"model_kwargs","advanced":true,"dynamic":false,"info":""},"openai_api_base":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":true,"name":"openai_api_base","display_name":"OpenAI API Base","advanced":true,"dynamic":false,"info":"","value":""},"openai_api_key":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":"","fileTypes":[],"password":true,"name":"openai_api_key","display_name":"OpenAI API Key","advanced":false,"dynamic":false,"info":""},"openai_api_type":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":true,"name":"openai_api_type","display_name":"OpenAI API Type","advanced":true,"dynamic":false,"info":"","value":""},"openai_api_version":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":true,"name":"openai_api_version","display_name":"OpenAI API Version","advanced":true,"dynamic":false,"info":"","value":""},"openai_organization":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":false,"name":"openai_organization","display_name":"OpenAI Organization","advanced":true,"dynamic":false,"info":""},"openai_proxy":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":false,"name":"openai_proxy","display_name":"OpenAI Proxy","advanced":true,"dynamic":false,"info":""},"request_timeout":{"type":"float","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":false,"name":"request_timeout","advanced":true,"dynamic":false,"info":"","rangeSpec":{"min":-1,"max":1,"step":0.1}},"show_progress_bar":{"type":"bool","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":false,"fileTypes":[],"password":false,"name":"show_progress_bar","advanced":true,"dynamic":false,"info":""},"skip_empty":{"type":"bool","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":false,"fileTypes":[],"password":false,"name":"skip_empty","advanced":true,"dynamic":false,"info":""},"tiktoken_enabled":{"type":"bool","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":"","fileTypes":[],"password":true,"name":"tiktoken_enabled","advanced":false,"dynamic":false,"info":""},"tiktoken_model_name":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":true,"name":"tiktoken_model_name","advanced":false,"dynamic":false,"info":"","value":""},"_type":"OpenAIEmbeddings"},"description":"OpenAI embedding models.","base_classes":["Embeddings","OpenAIEmbeddings"],"display_name":"OpenAIEmbeddings","documentation":"https://python.langchain.com/docs/modules/data_connection/text_embedding/integrations/openai","custom_fields":{},"output_types":[],"field_formatters":{},"beta":false},"id":"OpenAIEmbeddings-SVtZH"},"selected":false,"positionAbsolute":{"x":259.71169818227725,"y":798.3326731573329},"dragging":false},{"width":384,"height":629,"id":"ChatOpenAI-sVPyZ","type":"genericNode","position":{"x":1062.421575818705,"y":-656.2477846970098},"data":{"type":"ChatOpenAI","node":{"template":{"callbacks":{"type":"langchain_core.callbacks.base.BaseCallbackHandler","required":false,"placeholder":"","list":true,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"callbacks","advanced":false,"dynamic":false,"info":""},"async_client":{"type":"Any","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"async_client","advanced":false,"dynamic":false,"info":""},"cache":{"type":"bool","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"cache","advanced":false,"dynamic":false,"info":""},"client":{"type":"Any","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"client","advanced":false,"dynamic":false,"info":""},"default_headers":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"default_headers","advanced":false,"dynamic":false,"info":""},"default_query":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"default_query","advanced":false,"dynamic":false,"info":""},"http_client":{"type":"Any","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"http_client","advanced":false,"dynamic":false,"info":""},"max_retries":{"type":"int","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"value":2,"fileTypes":[],"password":false,"name":"max_retries","advanced":false,"dynamic":false,"info":""},"max_tokens":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":true,"name":"max_tokens","advanced":false,"dynamic":false,"info":"","value":""},"metadata":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"metadata","advanced":false,"dynamic":false,"info":""},"model_kwargs":{"type":"dict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":false,"name":"model_kwargs","advanced":true,"dynamic":false,"info":""},"model_name":{"type":"str","required":false,"placeholder":"","list":true,"show":true,"multiline":false,"value":"gpt-4-1106-preview","fileTypes":[],"password":false,"options":["gpt-4-1106-preview","gpt-4-vision-preview","gpt-4","gpt-4-32k","gpt-3.5-turbo","gpt-3.5-turbo-16k"],"name":"model_name","advanced":false,"dynamic":false,"info":""},"n":{"type":"int","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"value":1,"fileTypes":[],"password":false,"name":"n","advanced":false,"dynamic":false,"info":""},"openai_api_base":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"password":false,"name":"openai_api_base","display_name":"OpenAI API Base","advanced":false,"dynamic":false,"info":"\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n"},"openai_api_key":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":"","fileTypes":[],"password":true,"name":"openai_api_key","display_name":"OpenAI API Key","advanced":false,"dynamic":false,"info":""},"openai_organization":{"type":"str","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"openai_organization","display_name":"OpenAI Organization","advanced":false,"dynamic":false,"info":""},"openai_proxy":{"type":"str","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"openai_proxy","display_name":"OpenAI Proxy","advanced":false,"dynamic":false,"info":""},"request_timeout":{"type":"float","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"request_timeout","advanced":false,"dynamic":false,"info":"","rangeSpec":{"min":-1,"max":1,"step":0.1}},"streaming":{"type":"bool","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"value":false,"fileTypes":[],"password":false,"name":"streaming","advanced":false,"dynamic":false,"info":""},"tags":{"type":"str","required":false,"placeholder":"","list":true,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"tags","advanced":false,"dynamic":false,"info":""},"temperature":{"type":"float","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":0.7,"fileTypes":[],"password":false,"name":"temperature","advanced":false,"dynamic":false,"info":"","rangeSpec":{"min":-1,"max":1,"step":0.1}},"tiktoken_model_name":{"type":"str","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"tiktoken_model_name","advanced":false,"dynamic":false,"info":""},"verbose":{"type":"bool","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"value":false,"fileTypes":[],"password":false,"name":"verbose","advanced":false,"dynamic":false,"info":""},"_type":"ChatOpenAI"},"description":"`OpenAI` Chat large language models API.","base_classes":["BaseLanguageModel","ChatOpenAI","BaseChatModel","BaseLLM"],"display_name":"ChatOpenAI","documentation":"https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai","custom_fields":{},"output_types":[],"field_formatters":{},"beta":false},"id":"ChatOpenAI-sVPyZ"},"selected":false,"positionAbsolute":{"x":1062.421575818705,"y":-656.2477846970098},"dragging":false},{"width":384,"height":501,"id":"CharacterTextSplitter-WWteU","type":"genericNode","position":{"x":260.2169985188466,"y":165.58694375865582},"data":{"type":"CharacterTextSplitter","node":{"template":{"documents":{"type":"Document","required":true,"placeholder":"","list":true,"show":true,"multiline":false,"value":"","fileTypes":[],"file_path":"","password":false,"name":"documents","advanced":false,"dynamic":false,"info":""},"chunk_overlap":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"50","fileTypes":[],"file_path":"","password":false,"name":"chunk_overlap","display_name":"Chunk Overlap","advanced":false,"dynamic":false,"info":""},"chunk_size":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"500","fileTypes":[],"file_path":"","password":false,"name":"chunk_size","display_name":"Chunk Size","advanced":false,"dynamic":false,"info":""},"separator":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":" ","fileTypes":[],"file_path":"","password":false,"name":"separator","display_name":"Separator","advanced":false,"dynamic":false,"info":""},"_type":"CharacterTextSplitter"},"description":"Splitting text that looks at characters.","base_classes":["Document"],"display_name":"CharacterTextSplitter","documentation":"https://python.langchain.com/docs/modules/data_connection/document_transformers/text_splitters/character_text_splitter","custom_fields":{},"output_types":["Document"],"field_formatters":{},"beta":false},"id":"CharacterTextSplitter-WWteU"},"selected":false,"positionAbsolute":{"x":260.2169985188466,"y":165.58694375865582},"dragging":false}],"edges":[{"source":"PromptTemplate-iBBGK","sourceHandle":"{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-iBBGKœ}","target":"CustomComponent-63aa3","targetHandle":"{œfieldNameœ:œpromptœ,œidœ:œCustomComponent-63aa3œ,œinputTypesœ:null,œtypeœ:œPromptTemplateœ}","data":{"targetHandle":{"fieldName":"prompt","id":"CustomComponent-63aa3","inputTypes":null,"type":"PromptTemplate"},"sourceHandle":{"baseClasses":["PromptTemplate","StringPromptTemplate","BasePromptTemplate"],"dataType":"PromptTemplate","id":"PromptTemplate-iBBGK"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-PromptTemplate-iBBGK{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-iBBGKœ}-CustomComponent-63aa3{œfieldNameœ:œpromptœ,œidœ:œCustomComponent-63aa3œ,œinputTypesœ:null,œtypeœ:œPromptTemplateœ}","selected":false},{"source":"OpenAIEmbeddings-SVtZH","target":"Chroma-RZMrP","sourceHandle":"{œbaseClassesœ:[œEmbeddingsœ,œOpenAIEmbeddingsœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-SVtZHœ}","targetHandle":"{œfieldNameœ:œembeddingœ,œidœ:œChroma-RZMrPœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}","id":"reactflow__edge-OpenAIEmbeddings-SVtZH{œbaseClassesœ:[œEmbeddingsœ,œOpenAIEmbeddingsœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-SVtZHœ}-Chroma-RZMrP{œfieldNameœ:œembeddingœ,œidœ:œChroma-RZMrPœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}","data":{"targetHandle":{"fieldName":"embedding","id":"Chroma-RZMrP","inputTypes":null,"type":"Embeddings"},"sourceHandle":{"baseClasses":["Embeddings","OpenAIEmbeddings"],"dataType":"OpenAIEmbeddings","id":"OpenAIEmbeddings-SVtZH"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"selected":false},{"source":"ChatOpenAI-sVPyZ","sourceHandle":"{œbaseClassesœ:[œBaseLanguageModelœ,œChatOpenAIœ,œBaseChatModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-sVPyZœ}","target":"CustomComponent-63aa3","targetHandle":"{œfieldNameœ:œllmœ,œidœ:œCustomComponent-63aa3œ,œinputTypesœ:null,œtypeœ:œBaseLLMœ}","data":{"targetHandle":{"fieldName":"llm","id":"CustomComponent-63aa3","inputTypes":null,"type":"BaseLLM"},"sourceHandle":{"baseClasses":["BaseLanguageModel","ChatOpenAI","BaseChatModel","BaseLLM"],"dataType":"ChatOpenAI","id":"ChatOpenAI-sVPyZ"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-ChatOpenAI-sVPyZ{œbaseClassesœ:[œBaseLanguageModelœ,œChatOpenAIœ,œBaseChatModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-sVPyZœ}-CustomComponent-63aa3{œfieldNameœ:œllmœ,œidœ:œCustomComponent-63aa3œ,œinputTypesœ:null,œtypeœ:œBaseLLMœ}"},{"source":"Chroma-RZMrP","sourceHandle":"{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-RZMrPœ}","target":"CustomComponent-63aa3","targetHandle":"{œfieldNameœ:œvector_storeœ,œidœ:œCustomComponent-63aa3œ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}","data":{"targetHandle":{"fieldName":"vector_store","id":"CustomComponent-63aa3","inputTypes":null,"type":"VectorStore"},"sourceHandle":{"baseClasses":["VectorStore","BaseRetriever"],"dataType":"Chroma","id":"Chroma-RZMrP"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-Chroma-RZMrP{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-RZMrPœ}-CustomComponent-63aa3{œfieldNameœ:œvector_storeœ,œidœ:œCustomComponent-63aa3œ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}"},{"source":"CustomComponent-8xbUY","sourceHandle":"{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-8xbUYœ}","target":"CharacterTextSplitter-WWteU","targetHandle":"{œfieldNameœ:œdocumentsœ,œidœ:œCharacterTextSplitter-WWteUœ,œinputTypesœ:null,œtypeœ:œDocumentœ}","data":{"targetHandle":{"fieldName":"documents","id":"CharacterTextSplitter-WWteU","inputTypes":null,"type":"Document"},"sourceHandle":{"baseClasses":["Document"],"dataType":"CustomComponent","id":"CustomComponent-8xbUY"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-CustomComponent-8xbUY{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-8xbUYœ}-CharacterTextSplitter-WWteU{œfieldNameœ:œdocumentsœ,œidœ:œCharacterTextSplitter-WWteUœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"},{"source":"CharacterTextSplitter-WWteU","sourceHandle":"{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCharacterTextSplitterœ,œidœ:œCharacterTextSplitter-WWteUœ}","target":"Chroma-RZMrP","targetHandle":"{œfieldNameœ:œdocumentsœ,œidœ:œChroma-RZMrPœ,œinputTypesœ:null,œtypeœ:œDocumentœ}","data":{"targetHandle":{"fieldName":"documents","id":"Chroma-RZMrP","inputTypes":null,"type":"Document"},"sourceHandle":{"baseClasses":["Document"],"dataType":"CharacterTextSplitter","id":"CharacterTextSplitter-WWteU"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-CharacterTextSplitter-WWteU{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCharacterTextSplitterœ,œidœ:œCharacterTextSplitter-WWteUœ}-Chroma-RZMrP{œfieldNameœ:œdocumentsœ,œidœ:œChroma-RZMrPœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"}],"viewport":{"x":332.9545676737051,"y":272.8904759324953,"zoom":0.33915108186191806}},"is_component":false}