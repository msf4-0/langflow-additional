{"id":"db8249be-816b-43c2-8419-4139ea120f80","name":"Album Cover Builder","data":{"nodes":[{"width":384,"height":375,"id":"PromptTemplate-6OhUd","type":"genericNode","position":{"x":-58.26314672549944,"y":-588.9675023998702},"data":{"type":"PromptTemplate","node":{"template":{"output_parser":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"output_parser","advanced":false,"dynamic":true,"info":"","type":"BaseOutputParser","list":false},"input_types":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"input_types","advanced":false,"dynamic":true,"info":"","type":"dict","list":false},"input_variables":{"required":true,"placeholder":"","show":false,"multiline":false,"password":false,"name":"input_variables","advanced":false,"dynamic":true,"info":"","type":"str","list":true,"value":["transcription"]},"partial_variables":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"partial_variables","advanced":false,"dynamic":true,"info":"","type":"dict","list":false},"template":{"required":true,"placeholder":"","show":true,"multiline":true,"password":false,"name":"template","advanced":false,"dynamic":true,"info":"","type":"prompt","list":false,"value":"create an image prompt based on the song's lyrics to be used as the album cover of this song:\n\nlyrics:\n{transcription}"},"template_format":{"required":false,"placeholder":"","show":false,"multiline":false,"value":"f-string","password":false,"name":"template_format","advanced":false,"dynamic":true,"info":"","type":"str","list":false},"validate_template":{"required":false,"placeholder":"","show":false,"multiline":false,"value":false,"password":false,"name":"validate_template","advanced":false,"dynamic":true,"info":"","type":"bool","list":false},"_type":"PromptTemplate","transcription":{"required":false,"placeholder":"","show":true,"multiline":true,"value":"","password":false,"name":"transcription","display_name":"transcription","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":"","type":"str","list":false}},"description":"A prompt template for a language model.","base_classes":["PromptTemplate","StringPromptTemplate","BasePromptTemplate"],"name":"","display_name":"PromptTemplate","documentation":"https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/","custom_fields":{"":["transcription"],"template":["transcription","question"]},"output_types":[],"full_path":null,"field_formatters":{},"beta":false,"error":null},"id":"PromptTemplate-6OhUd"},"selected":false,"positionAbsolute":{"x":-58.26314672549944,"y":-588.9675023998702},"dragging":false},{"width":384,"height":629,"id":"ChatOpenAI-b4L5a","type":"genericNode","position":{"x":-111.51999788309752,"y":-36.45079722980881},"data":{"type":"ChatOpenAI","node":{"template":{"callbacks":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"callbacks","advanced":false,"dynamic":false,"info":"","type":"langchain_core.callbacks.base.BaseCallbackHandler","list":true},"async_client":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"async_client","advanced":false,"dynamic":false,"info":"","type":"Any","list":false},"cache":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"cache","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"client":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"client","advanced":false,"dynamic":false,"info":"","type":"Any","list":false},"default_headers":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"default_headers","advanced":false,"dynamic":false,"info":"","type":"dict","list":false},"default_query":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"default_query","advanced":false,"dynamic":false,"info":"","type":"dict","list":false},"http_client":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"http_client","advanced":false,"dynamic":false,"info":"","type":"Any","list":false},"max_retries":{"required":false,"placeholder":"","show":false,"multiline":false,"value":2,"password":false,"name":"max_retries","advanced":false,"dynamic":false,"info":"","type":"int","list":false},"max_tokens":{"required":false,"placeholder":"","show":true,"multiline":false,"password":true,"name":"max_tokens","advanced":false,"dynamic":false,"info":"","type":"int","list":false,"value":""},"metadata":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"metadata","advanced":false,"dynamic":false,"info":"","type":"dict","list":false},"model_kwargs":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"model_kwargs","advanced":true,"dynamic":false,"info":"","type":"dict","list":false},"model_name":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"gpt-4-1106-preview","password":false,"options":["gpt-4-1106-preview","gpt-4","gpt-4-32k","gpt-3.5-turbo","gpt-3.5-turbo-16k"],"name":"model_name","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"n":{"required":false,"placeholder":"","show":false,"multiline":false,"value":1,"password":false,"name":"n","advanced":false,"dynamic":false,"info":"","type":"int","list":false},"openai_api_base":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"openai_api_base","display_name":"OpenAI API Base","advanced":false,"dynamic":false,"info":"\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n","type":"str","list":false},"openai_api_key":{"required":false,"placeholder":"","show":true,"multiline":false,"value":"","password":true,"name":"openai_api_key","display_name":"OpenAI API Key","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"openai_organization":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"openai_organization","display_name":"OpenAI Organization","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"openai_proxy":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"openai_proxy","display_name":"OpenAI Proxy","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"request_timeout":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"request_timeout","advanced":false,"dynamic":false,"info":"","type":"float","list":false},"streaming":{"required":false,"placeholder":"","show":false,"multiline":false,"value":false,"password":false,"name":"streaming","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"tags":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"tags","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"temperature":{"required":false,"placeholder":"","show":true,"multiline":false,"value":0.7,"password":false,"name":"temperature","advanced":false,"dynamic":false,"info":"","type":"float","list":false},"tiktoken_model_name":{"required":false,"placeholder":"","show":false,"multiline":false,"password":false,"name":"tiktoken_model_name","advanced":false,"dynamic":false,"info":"","type":"str","list":false},"verbose":{"required":false,"placeholder":"","show":false,"multiline":false,"value":false,"password":false,"name":"verbose","advanced":false,"dynamic":false,"info":"","type":"bool","list":false},"_type":"ChatOpenAI"},"description":"`OpenAI` Chat large language models API.","base_classes":["ChatOpenAI","BaseChatModel","BaseLanguageModel","BaseLLM"],"display_name":"ChatOpenAI","custom_fields":{},"output_types":[],"documentation":"https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai","beta":false,"error":null},"id":"ChatOpenAI-b4L5a"},"selected":false,"positionAbsolute":{"x":-111.51999788309752,"y":-36.45079722980881},"dragging":false},{"width":384,"height":453,"id":"CustomComponent-xQm39","type":"genericNode","position":{"x":-797.4679466819108,"y":-898.3684070259571},"data":{"type":"CustomComponent","node":{"template":{"code":{"dynamic":true,"required":true,"placeholder":"","show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom typing import Optional, List, Dict, Union\nfrom langflow.field_typing import (\n    AgentExecutor,\n    BaseChatMemory,\n    BaseLanguageModel,\n    BaseLLM,\n    BaseLoader,\n    BaseMemory,\n    BaseOutputParser,\n    BasePromptTemplate,\n    BaseRetriever,\n    Callable,\n    Chain,\n    ChatPromptTemplate,\n    Data,\n    Document,\n    Embeddings,\n    NestedDict,\n    Object,\n    PromptTemplate,\n    TextSplitter,\n    Tool,\n    VectorStore,\n)\n\nfrom openai import OpenAI\nclass Component(CustomComponent):\n    display_name: str = \"MP3 transcriber\"\n    description: str = \"transcript mp3 files to text\"\n\n    def build_config(self):\n        return {\"audio\":{\"field_type\":\"file\",\"suffixes\":[\".mp3\"],\"file_types\":[\"mp3\"]},\"OpenAIKey\":{\"field_type\":\"str\",\"password\":True}}\n\n    def build(self,audio:str,OpenAIKey:str) -> str:\n        client = OpenAI(api_key=OpenAIKey)\n        \n        audio_file= open(audio, \"rb\")\n        transcript = client.audio.transcriptions.create(\n          model=\"whisper-1\", \n          file=audio_file,\n          response_format=\"text\"\n        )\n        self.status = transcript\n        return transcript\n\n","password":false,"name":"code","advanced":false,"type":"code","list":false},"_type":"CustomComponent","OpenAIKey":{"required":true,"placeholder":"","show":true,"multiline":false,"password":true,"name":"OpenAIKey","display_name":"OpenAIKey","advanced":false,"dynamic":false,"info":"","type":"str","list":false,"value":""},"audio":{"required":true,"placeholder":"","show":true,"multiline":false,"suffixes":[".mp3"],"password":false,"name":"audio","display_name":"audio","advanced":false,"dynamic":false,"info":"","type":"file","list":false,"fileTypes":["mp3"],"file_path":"/home/vazz/.cache/langflow/79cdce7e-35ed-491f-b241-84116f592fbf/fdd419006949dd3fa12702fa8a1d1263bb3844b43cbadafe6abc811c63af4ffe.mp3","value":""}},"description":"transcript mp3 files to text","base_classes":["str"],"display_name":"MP3 transcriber","custom_fields":{"OpenAIKey":null,"audio":null},"output_types":["str"],"documentation":"","beta":true,"error":null},"id":"CustomComponent-xQm39"},"selected":false,"positionAbsolute":{"x":-797.4679466819108,"y":-898.3684070259571},"dragging":false},{"width":384,"height":809,"id":"CustomComponent-gpBo8","type":"genericNode","position":{"x":1789.3979729850944,"y":-774.4499668186456},"data":{"type":"CustomComponent","node":{"template":{"code":{"dynamic":true,"required":true,"placeholder":"","show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom langflow.field_typing import Data\nfrom platformdirs import user_cache_dir\nimport base64\nfrom PIL import Image\nfrom io import BytesIO\nfrom openai import OpenAI\nfrom pathlib import Path\n\nclass Component(CustomComponent):\n    display_name: str = \"Image generator\"\n    description: str = \"generate images using Dall-E\"\n    documentation: str = \"http://docs.langflow.org/components/custom\"\n\n    def build_config(self):\n        return {\"prompt\": {\"display_name\": \"Prompt\",\"input_types\":[\"str\"]},\n        \"api_key\":{\"display_name\":\"OpenAI API key\",\"password\":True},\n        \"model\":{\"display_name\":\"Model name\",\"advanced\":True,\"options\":[\"dall-e-2\",\"dall-e-3\"], \"value\":\"dall-e-3\"},\n        \"file_name\":{\"display_name\":\"File Name\"},\n        \"output_format\":{\"display_name\":\"Output format\",\"options\":[\"jpeg\",\"png\"],\"value\":\"jpeg\"},\n        \"width\":{\"display_name\":\"Width\" ,\"value\":1024},\n        \"height\":{\"display_name\":\"Height\", \"value\":1024}\n        }\n\n    def build(self, prompt:str,api_key:str,model:str,file_name:str,output_format:str,width:int,height:int):\n        client = OpenAI(api_key=api_key)\n        cache_dir = Path(user_cache_dir(\"langflow\"))\n        images_dir = cache_dir / \"images\"\n        images_dir.mkdir(parents=True, exist_ok=True)\n        image_path = images_dir / f\"{file_name}.{output_format}\"\n        response = client.images.generate(\n          model=model,\n          prompt=prompt,\n          size=f\"{height}x{width}\",\n          response_format=\"b64_json\",\n          n=1,\n        )\n        # Decode base64-encoded image string\n        binary_data = base64.b64decode(response.data[0].b64_json)\n        # Create PIL Image object from binary image data\n        image_pil = Image.open(BytesIO(binary_data))\n        image_pil.save(image_path, format=output_format.upper())\n        return \"\"","password":false,"name":"code","advanced":false,"type":"code","list":false},"_type":"CustomComponent","api_key":{"required":true,"placeholder":"","show":true,"multiline":false,"password":true,"name":"api_key","display_name":"OpenAI API key","advanced":false,"dynamic":false,"info":"","type":"str","list":false,"value":""},"file_name":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"file_name","display_name":"File Name","advanced":false,"dynamic":false,"info":"","type":"str","list":false,"value":"album"},"height":{"required":true,"placeholder":"","show":true,"multiline":false,"value":1024,"password":false,"name":"height","display_name":"Height","advanced":false,"dynamic":false,"info":"","type":"int","list":false},"model":{"required":true,"placeholder":"","show":true,"multiline":false,"value":"dall-e-3","password":false,"options":["dall-e-2","dall-e-3"],"name":"model","display_name":"Model name","advanced":true,"dynamic":false,"info":"","type":"str","list":true},"output_format":{"required":true,"placeholder":"","show":true,"multiline":false,"value":"jpeg","password":false,"options":["jpeg","png"],"name":"output_format","display_name":"Output format","advanced":false,"dynamic":false,"info":"","type":"str","list":true},"prompt":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"prompt","display_name":"Prompt","advanced":false,"input_types":["str"],"dynamic":false,"info":"","type":"str","list":false,"value":""},"width":{"required":true,"placeholder":"","show":true,"multiline":false,"value":1024,"password":false,"name":"width","display_name":"Width","advanced":false,"dynamic":false,"info":"","type":"int","list":false}},"description":"generate images using Dall-E","base_classes":["Data"],"display_name":"Image generator","custom_fields":{"api_key":null,"file_name":null,"height":null,"model":null,"output_format":null,"prompt":null,"width":null},"output_types":["Data"],"documentation":"http://docs.langflow.org/components/custom","beta":true,"error":null},"id":"CustomComponent-gpBo8"},"selected":false,"dragging":false,"positionAbsolute":{"x":1789.3979729850944,"y":-774.4499668186456}},{"width":384,"height":339,"id":"LLMChain-NLdLE","type":"genericNode","position":{"x":641.8829336893017,"y":-528.3938872240723},"data":{"type":"LLMChain","node":{"template":{"code":{"dynamic":true,"required":true,"placeholder":"","show":false,"multiline":true,"value":"from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom langflow import CustomComponent\nfrom langflow.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n","password":false,"name":"code","advanced":false,"type":"code","list":false,"display_name":"code"},"_type":"CustomComponent","llm":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"llm","display_name":"LLM","advanced":false,"dynamic":false,"info":"","type":"BaseLanguageModel","list":false},"memory":{"required":false,"placeholder":"","show":true,"multiline":false,"password":false,"name":"memory","display_name":"Memory","advanced":false,"dynamic":false,"info":"","type":"BaseMemory","list":false},"prompt":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"prompt","display_name":"Prompt","advanced":false,"dynamic":false,"info":"","type":"BasePromptTemplate","list":false}},"description":"Chain to run queries against LLMs","base_classes":["Chain","Callable"],"display_name":"LLMChain","custom_fields":{"llm":null,"memory":null,"prompt":null},"output_types":["LLMChain"],"documentation":"","beta":true,"error":null},"id":"LLMChain-NLdLE"},"selected":false,"positionAbsolute":{"x":641.8829336893017,"y":-528.3938872240723},"dragging":false},{"width":384,"height":329,"id":"CustomComponent-4O0UU","type":"genericNode","position":{"x":1172.3428310523518,"y":-543.7436176144299},"data":{"type":"CustomComponent","node":{"template":{"code":{"dynamic":true,"required":true,"placeholder":"","show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom langflow.field_typing import Data\n\n\nclass Component(CustomComponent):\n    display_name: str = \"Custom Component\"\n    description: str = \"Create any custom component you want!\"\n    documentation: str = \"http://docs.langflow.org/components/custom\"\n\n    def build_config(self):\n        return {\"param\": {\"display_name\": \"Parameter\"}}\n\n    def build(self, param: Chain) -> str:\n        result = param.run({})\n        self.status = result\n        return result\n","password":false,"name":"code","advanced":false,"type":"code","list":false},"_type":"CustomComponent","param":{"required":true,"placeholder":"","show":true,"multiline":false,"password":false,"name":"param","display_name":"Parameter","advanced":false,"dynamic":false,"info":"","type":"Chain","list":false}},"description":"Create any custom component you want!","base_classes":["str"],"display_name":"Custom Component","custom_fields":{"param":null},"output_types":["str"],"documentation":"http://docs.langflow.org/components/custom","beta":true,"error":null},"id":"CustomComponent-4O0UU"},"selected":false,"positionAbsolute":{"x":1172.3428310523518,"y":-543.7436176144299},"dragging":false}],"edges":[{"source":"CustomComponent-xQm39","sourceHandle":"{œbaseClassesœ:[œstrœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-xQm39œ}","target":"PromptTemplate-6OhUd","targetHandle":"{œfieldNameœ:œtranscriptionœ,œidœ:œPromptTemplate-6OhUdœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}","data":{"targetHandle":{"fieldName":"transcription","id":"PromptTemplate-6OhUd","inputTypes":["Document","BaseOutputParser"],"type":"str"},"sourceHandle":{"baseClasses":["str"],"dataType":"CustomComponent","id":"CustomComponent-xQm39"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-CustomComponent-xQm39{œbaseClassesœ:[œstrœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-xQm39œ}-PromptTemplate-6OhUd{œfieldNameœ:œtranscriptionœ,œidœ:œPromptTemplate-6OhUdœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"},{"source":"LLMChain-NLdLE","sourceHandle":"{œbaseClassesœ:[œChainœ,œCallableœ],œdataTypeœ:œLLMChainœ,œidœ:œLLMChain-NLdLEœ}","target":"CustomComponent-4O0UU","targetHandle":"{œfieldNameœ:œparamœ,œidœ:œCustomComponent-4O0UUœ,œinputTypesœ:null,œtypeœ:œChainœ}","data":{"targetHandle":{"fieldName":"param","id":"CustomComponent-4O0UU","inputTypes":null,"type":"Chain"},"sourceHandle":{"baseClasses":["Chain","Callable"],"dataType":"LLMChain","id":"LLMChain-NLdLE"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-LLMChain-NLdLE{œbaseClassesœ:[œChainœ,œCallableœ],œdataTypeœ:œLLMChainœ,œidœ:œLLMChain-NLdLEœ}-CustomComponent-4O0UU{œfieldNameœ:œparamœ,œidœ:œCustomComponent-4O0UUœ,œinputTypesœ:null,œtypeœ:œChainœ}","selected":false},{"source":"ChatOpenAI-b4L5a","sourceHandle":"{œbaseClassesœ:[œChatOpenAIœ,œBaseChatModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-b4L5aœ}","target":"LLMChain-NLdLE","targetHandle":"{œfieldNameœ:œllmœ,œidœ:œLLMChain-NLdLEœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}","data":{"targetHandle":{"fieldName":"llm","type":"BaseLanguageModel","id":"LLMChain-NLdLE","inputTypes":null},"sourceHandle":{"baseClasses":["ChatOpenAI","BaseChatModel","BaseLanguageModel","BaseLLM"],"dataType":"ChatOpenAI","id":"ChatOpenAI-b4L5a"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-ChatOpenAI-b4L5a{œbaseClassesœ:[œChatOpenAIœ,œBaseChatModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-b4L5aœ}-LLMChain-NLdLE{œfieldNameœ:œllmœ,œidœ:œLLMChain-NLdLEœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"},{"source":"PromptTemplate-6OhUd","sourceHandle":"{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-6OhUdœ}","target":"LLMChain-NLdLE","targetHandle":"{œfieldNameœ:œpromptœ,œidœ:œLLMChain-NLdLEœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}","data":{"targetHandle":{"fieldName":"prompt","type":"BasePromptTemplate","id":"LLMChain-NLdLE","inputTypes":null},"sourceHandle":{"baseClasses":["PromptTemplate","StringPromptTemplate","BasePromptTemplate"],"dataType":"PromptTemplate","id":"PromptTemplate-6OhUd"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-PromptTemplate-6OhUd{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-6OhUdœ}-LLMChain-NLdLE{œfieldNameœ:œpromptœ,œidœ:œLLMChain-NLdLEœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"},{"source":"CustomComponent-4O0UU","sourceHandle":"{œbaseClassesœ:[œstrœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-4O0UUœ}","target":"CustomComponent-gpBo8","targetHandle":"{œfieldNameœ:œpromptœ,œidœ:œCustomComponent-gpBo8œ,œinputTypesœ:[œstrœ],œtypeœ:œstrœ}","data":{"targetHandle":{"fieldName":"prompt","id":"CustomComponent-gpBo8","inputTypes":["str"],"type":"str"},"sourceHandle":{"baseClasses":["str"],"dataType":"CustomComponent","id":"CustomComponent-4O0UU"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-CustomComponent-4O0UU{œbaseClassesœ:[œstrœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-4O0UUœ}-CustomComponent-gpBo8{œfieldNameœ:œpromptœ,œidœ:œCustomComponent-gpBo8œ,œinputTypesœ:[œstrœ],œtypeœ:œstrœ}"}],"viewport":{"x":506.12699136078265,"y":434.36349812585837,"zoom":0.43527528164806234}},"is_component":false}